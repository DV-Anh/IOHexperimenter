<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="_i_o_hprofiler__class__generator_8hpp" kind="file" language="C++">
    <compoundname>IOHprofiler_class_generator.hpp</compoundname>
    <includedby refid="_i_o_hprofiler__class__generator_8h" local="yes">src/Template/IOHprofiler_class_generator.h</includedby>
    <invincdepgraph>
      <node id="1">
        <label>src/Template/IOHprofiler_class_generator.hpp</label>
        <link refid="_i_o_hprofiler__class__generator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Suites/IOHprofiler_BBOB_suite.hpp</label>
        <link refid="_i_o_hprofiler___b_b_o_b__suite_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Problems/IOHprofiler_all_problems.hpp</label>
        <link refid="_i_o_hprofiler__all__problems_8hpp_source"/>
      </node>
      <node id="5">
        <label>src/Template/Experiments/IOHprofiler_experimenter.h</label>
        <link refid="_i_o_hprofiler__experimenter_8h_source"/>
      </node>
      <node id="7">
        <label>src/Suites/IOHprofiler_PBO_suite.hpp</label>
        <link refid="_i_o_hprofiler___p_b_o__suite_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/Template/IOHprofiler_suite.h</label>
        <link refid="_i_o_hprofiler__suite_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/Suites/IOHprofiler_all_suites.hpp</label>
        <link refid="_i_o_hprofiler__all__suites_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/Template/IOHprofiler_class_generator.h</label>
        <link refid="_i_o_hprofiler__class__generator_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
<para>Head file for the classes: &apos;<ref refid="classgeneric_generator" kindref="compound">genericGenerator</ref>&apos; and &apos;<ref refid="classregister_in_factory" kindref="compound">registerInFactory</ref>&apos;. </para>
    </briefdescription>
    <detaileddescription>
<para>These classes are used for registering problems and suites.</para>
<para><simplesect kind="author"><para>Ofer M. Sher, Furong Ye </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>manufacturedObj&gt;<sp/><ref refid="classgeneric_generator" kindref="compound">genericGenerator&lt;manufacturedObj&gt;::genericGenerator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>manufacturedObj&gt;<sp/><ref refid="classgeneric_generator" kindref="compound">genericGenerator&lt;manufacturedObj&gt;</ref><sp/>&amp;<ref refid="classgeneric_generator" kindref="compound">genericGenerator&lt;manufacturedObj&gt;::instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgeneric_generator" kindref="compound">genericGenerator</ref><sp/>theInstance;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theInstance;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>manufacturedObj&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgeneric_generator" kindref="compound">genericGenerator&lt;manufacturedObj&gt;::regCreateFn</ref>(std::string<sp/>clName,<sp/>std::shared_ptr&lt;manufacturedObj&gt;<sp/>(*func)())<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>registry[clName]=func;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>manufacturedObj&gt;<sp/>std::shared_ptr&lt;manufacturedObj&gt;<sp/><ref refid="classgeneric_generator" kindref="compound">genericGenerator&lt;manufacturedObj&gt;::create</ref>(std::string<sp/>className)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;manufacturedObj&gt;<sp/>ret(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FN_registry::const_iterator<sp/>regEntry<sp/>=<sp/>registry.find(className);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(regEntry<sp/>!=<sp/>registry.end())<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*regEntry).second();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Template/IOHprofiler_class_generator.hpp"/>
  </compounddef>
</doxygen>
