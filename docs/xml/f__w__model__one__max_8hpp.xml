<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="f__w__model__one__max_8hpp" kind="file" language="C++">
    <compoundname>f_w_model_one_max.hpp</compoundname>
    <includes refid="_i_o_hprofiler__problem_8h" local="yes">IOHprofiler_problem.h</includes>
    <includes refid="wmodels_8hpp" local="yes">wmodels.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
      <node id="18">
        <label>limits</label>
      </node>
      <node id="2">
        <label>IOHprofiler_problem.h</label>
        <link refid="_i_o_hprofiler__problem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>wmodels.hpp</label>
        <link refid="wmodels_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>IOHprofiler_problem.hpp</label>
        <link refid="_i_o_hprofiler__problem_8hpp_source"/>
      </node>
      <node id="15">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="19">
        <label>cfloat</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="25">
        <label>coco_transformation.hpp</label>
        <link refid="coco__transformation_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IOHprofiler_common.h</label>
        <link refid="_i_o_hprofiler__common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>IOHprofiler_transformation.h</label>
        <link refid="_i_o_hprofiler__transformation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="16">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>IOHprofiler_random.h</label>
        <link refid="_i_o_hprofiler__random_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="26">
        <label>suite_bbob_legacy_code.hpp</label>
        <link refid="suite__bbob__legacy__code_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IOHprofiler_platform.h</label>
        <link refid="_i_o_hprofiler__platform_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>coco_transformation_vars.hpp</label>
        <link refid="coco__transformation__vars_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Problems/WModel/f_w_model_one_max.hpp</label>
        <link refid="f__w__model__one__max_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="28">
        <label>coco_transformation_objs.hpp</label>
        <link refid="coco__transformation__objs_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="8">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_w___model___one_max" prot="public">W_Model_OneMax</innerclass>
    <briefdescription>
<para>cpp file for class <ref refid="f__w__model__one__max_8hpp" kindref="compound">f_w_model_one_max.hpp</ref> </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Furong Ye </para>
</simplesect>
<simplesect kind="date"><para>2019-08-28 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_F_W_MODEL_ONE_MAX_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_F_W_MODEL_ONE_MAX_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_o_hprofiler__problem_8h" kindref="compound">IOHprofiler_problem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wmodels.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_w___model___one_max" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_w___model___one_max" kindref="compound">W_Model_OneMax</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem</ref>&lt;int&gt;<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="class_w___model___one_max" kindref="compound">W_Model_OneMax</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance_id<sp/>=<sp/>DEFAULT_INSTANCE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>DEFAULT_DIMENSION)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_o_hprofiler__problem_1a274b6d21250c336d04c7bc0ba6becce0" kindref="member">IOHprofiler_set_instance_id</ref>(instance_id);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_problem_name(</highlight><highlight class="stringliteral">&quot;W_Model_OneMax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_problem_type(</highlight><highlight class="stringliteral">&quot;pseudo_Boolean_problem&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_number_of_objectives(1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_lowerbound(0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_upperbound(1);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_best_variables(1);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_o_hprofiler__problem_1aae2f77478533d0602371c447e1393d21" kindref="member">IOHprofiler_set_number_of_variables</ref>(dimension);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>~<ref refid="class_w___model___one_max" kindref="compound">W_Model_OneMax</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>dummy_info;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy_para<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>epistasis_para<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neutrality_para<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ruggedness_para<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>ruggedness_info;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_dimension;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prepare_problem()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;temp_dimension<sp/>=<sp/>this-&gt;IOHprofiler_get_number_of_variables();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dummy_para<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dummy_info<sp/>=<sp/>dummy(this-&gt;temp_dimension,dummy_para,10000);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(this-&gt;dummy_info.size()==(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(this-&gt;temp_dimension*this-&gt;dummy_para));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;temp_dimension<sp/>=<sp/>this-&gt;dummy_info.size();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;neutrality_para<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;temp_dimension<sp/>=<sp/>this-&gt;temp_dimension<sp/>/<sp/>this-&gt;neutrality_para;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;ruggedness_para<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ruggedness_info<sp/>=<sp/>ruggedness_raw(ruggedness_translate(this-&gt;ruggedness_para,<sp/>this-&gt;temp_dimension),<sp/>this-&gt;temp_dimension);<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>customize_optimal()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>IOHprofiler_get_number_of_variables();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optimal_value<sp/>=<sp/>(int)(dimension*(this-&gt;dummy_para<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>this-&gt;dummy_para))<sp/>/<sp/>(this-&gt;neutrality_para<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>this-&gt;neutrality_para);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_optimal((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)optimal_value);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="class_w___model___one_max_1a3ef9a091dc63b056db4c74659a25172f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w___model___one_max_1a3ef9a091dc63b056db4c74659a25172f" kindref="member">set_w_setting</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dummy_para,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>epistasis_para,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neutrality_para,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ruggedness_para)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dummy_para<sp/>=<sp/>dummy_para;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;epistasis_para<sp/>=<sp/>epistasis_para;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;neutrality_para<sp/>=<sp/>neutrality_para;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ruggedness_para<sp/>=<sp/>ruggedness_para;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_w___model___one_max_1a92ce02e0cd0bbf2c643c9c386abce0cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_w___model___one_max_1a92ce02e0cd0bbf2c643c9c386abce0cd" kindref="member">internal_evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>w_model_x;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>tempX;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dummy_para<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>this-&gt;dummy_info.size();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w_model_x.reserve(n);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_model_x.push_back(x[this-&gt;dummy_info[i]]);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w_model_x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neutrality<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;neutrality_para<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempX<sp/>=<sp/>w_model_x;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layer_neutrality_compute(tempX,w_model_x,this-&gt;neutrality_para);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>epistasis<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;epistasis_para<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempX<sp/>=<sp/>w_model_x;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>layer_epistasis_compute(tempX,w_model_x,this-&gt;epistasis_para);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>evaluate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>w_model_x.size();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>w_model_x[i];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ruggedness<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;ruggedness_para<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>this-&gt;ruggedness_info[result];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)result;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_w___model___one_max" kindref="compound">W_Model_OneMax</ref><sp/>*<sp/>createInstance(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance_id<sp/>=<sp/>DEFAULT_INSTANCE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>DEFAULT_DIMENSION)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w___model___one_max" kindref="compound">W_Model_OneMax</ref>(instance_id,<sp/>dimension);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Problems/WModel/f_w_model_one_max.hpp"/>
  </compounddef>
</doxygen>
