<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="md___users_maomilaoshi__codes__i_o_hexperimenter_src__template__experiments__r_e_a_d_m_e" kind="page">
    <compoundname>md__Users_maomilaoshi_Codes_IOHexperimenter_src_Template_Experiments_README</compoundname>
    <title>Experiment and configuration of IOHexperimenter.</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><bold>IOHexperimenters</bold> provides interface of using configuration files. After setting the path of the configuration file and giving an algorithm, the <computeroutput><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter</ref></computeroutput> can organize experiments automatically.</para>
<para><computeroutput><ref refid="class_i_o_hprofiler__configuration" kindref="compound">IOHprofiler_configuration</ref></computeroutput> reads configuration information from a given file, and these information can be used in <computeroutput><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter</ref></computeroutput> to generate <bold><ref refid="class_i_o_hprofiler__suite" kindref="compound">IOHprofiler_suite</ref></bold> and <bold><ref refid="class_i_o_hprofiler__csv__logger" kindref="compound">IOHprofiler_csv_logger</ref></bold>.</para>
<para>For the content of configuration file, it consists of three sections:</para>
<para><bold>suite</bold> configures the problems to be tested.<itemizedlist>
<listitem><para><bold>suite_name</bold>, is the name of the suite to be used. Please make sure that the suite with the corresponding name is registered.</para>
</listitem><listitem><para><bold>problem_id</bold>, configures problems to be tested. Note that id of problems are configured by the suite, please make sure that id is within the valid range.</para>
</listitem><listitem><para><bold>instance_id</bold>, configures the transformation methods applied on problems. For <computeroutput>PBO</computeroutput>:<itemizedlist>
<listitem><para><computeroutput>1</computeroutput> : no transformer operations on the problem.</para>
</listitem><listitem><para><computeroutput>2-50</computeroutput> : XOR and SHIFT operations are applied on the problem.</para>
</listitem><listitem><para><computeroutput>51-100</computeroutput>: SIGMA and SHIFT operations are applied on the problem.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><bold>dimension</bold>, configures dimension of problems to be tested. Note that allowed dimension is not larger than 20000.</para>
</listitem></itemizedlist>
</para>
<para><bold>logger</bold> configures the setting of output csv files.<itemizedlist>
<listitem><para><bold>result_foler</bold> is the directory of the folder where sotres output files.</para>
</listitem><listitem><para><bold>algorithm_name</bold>, is the name of the algorithm, which is used when generating &apos;.info&apos; files.</para>
</listitem><listitem><para><bold>algorithm_info</bold>, is additional information of the algorithm, which is used when generating &apos;.info&apos; files.</para>
</listitem></itemizedlist>
</para>
<para><bold>observer</bold> configures parameters of <computeroutput>IOHprofiler_server</computeroutput>, which is used in <computeroutput><ref refid="class_i_o_hprofiler__csv__logger" kindref="compound">IOHprofiler_csv_logger</ref></computeroutput>,<itemizedlist>
<listitem><para><bold>complete_triggers</bold> is the switch of <computeroutput>.cdat</computeroutput> files, which works with <bold>complete tracking</bold> strategy. Set it as <computeroutput>TRUE</computeroutput> or <computeroutput>true</computeroutput> if you want to output <computeroutput>.cdat</computeroutput> files.</para>
</listitem><listitem><para><bold>update_triggers</bold> is the switch of <computeroutput>.dat</computeroutput> files, which works with <bold>target-based strategy</bold> strategy. Set it as <computeroutput>TRUE</computeroutput> or <computeroutput>true</computeroutput> if you want to output <emphasis>.dat</emphasis><computeroutput>files.</computeroutput></para>
</listitem><listitem><para><computeroutput>__number_interval_triggers__ configures the</computeroutput>.idat<computeroutput>files, which works with __interval tracking__ number_target_triggers sets the value of the frequecny. If you do not want to generate</computeroutput>.idat<computeroutput>files, set</computeroutput>number_target_triggers<computeroutput>as 0.</computeroutput></para>
</listitem><listitem><para><computeroutput>__number_target_triggers__ configures the</computeroutput>.tdat<computeroutput>files, which works with __time-based tracking__ strategy.</computeroutput></para>
</listitem><listitem><para><computeroutput>__base_evaluation_triggers__ configures the</computeroutput>.tdat<computeroutput>files, which works with __time-based tracking__ strategy. To switch off</computeroutput>.tdat` files, set both <bold>number_target_triggers</bold> and <bold>base_evaluation_triggers</bold> as 0. For the detail of <bold>time-based tracking</bold>, please with the <ulink url="https://iohprofiler.github.io/IOHexperimenter/Loggers/Observer/">wiki page</ulink>.</para>
</listitem></itemizedlist>
</para>
<para>And for the function of algorithms, a shared smart pointer of <computeroutput><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem</ref></computeroutput> should be one and the only one argument of it. An example of declaration of an evolutionary algorithm is as follow, <programlisting filename=".cpp"><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>evolutionary_algorithm(std::shared_ptr&lt;<ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem&lt;int&gt;</ref>&gt;<sp/>problem)</highlight></codeline>
</programlisting></para>
<para>In addition, <computeroutput><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter</ref></computeroutput> allows to test each problem mutliple times by using the following statements. <programlisting filename=".cpp"><codeline><highlight class="normal">experimenter._set_independent_runs(1);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
