<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="_i_o_hprofiler__experimenter_8hpp" kind="file" language="C++">
    <compoundname>IOHprofiler_experimenter.hpp</compoundname>
    <includedby refid="_i_o_hprofiler__experimenter_8h" local="yes">src/Template/Experiments/IOHprofiler_experimenter.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>src/Template/Experiments/IOHprofiler_experimenter.h</label>
        <link refid="_i_o_hprofiler__experimenter_8h_source"/>
      </node>
      <node id="1">
        <label>src/Template/Experiments/IOHprofiler_experimenter.hpp</label>
        <link refid="_i_o_hprofiler__experimenter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputType&gt;<sp/><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter&lt;InputType&gt;::IOHprofiler_experimenter</ref>(std::string<sp/>configFileName,<sp/>_algorithm<sp/>*algorithm)<sp/>{</highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/>this-&gt;conf.readcfg(configFileName);</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/>configSuite<sp/>=<sp/><ref refid="classgeneric_generator" kindref="compound">genericGenerator&lt;IOHprofiler_suite&lt;InputType&gt;</ref><sp/>&gt;::instance().create(conf.get_suite_name());</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configSuite<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Creating<sp/>suite<sp/>fails,<sp/>please<sp/>check<sp/>your<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>configSuite-&gt;IOHprofiler_set_suite_problem_id(conf.get_problem_id());</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>configSuite-&gt;IOHprofiler_set_suite_instance_id(conf.get_instance_id());</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>configSuite-&gt;IOHprofiler_set_suite_dimension(conf.get_dimension());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>configSuite-&gt;loadProblem();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;IOHprofiler_csv_logger&gt;<sp/>logger(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger" kindref="compound">IOHprofiler_csv_logger</ref>(conf.get_output_directory(),conf.get_result_folder(),conf.get_algorithm_name(),conf.get_algorithm_info()));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logger<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Creating<sp/>logger<sp/>fails,<sp/>please<sp/>check<sp/>your<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>logger-&gt;set_complete_flag(conf.get_complete_triggers());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>logger-&gt;set_interval(conf.get_number_interval_triggers());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>logger-&gt;set_time_points(conf.get_base_evaluation_triggers(),conf.get_number_target_triggers());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>logger-&gt;set_update_flag(conf.get_update_triggers());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>config_csv_logger<sp/>=<sp/>logger;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>config_csv_logger-&gt;activate_logger();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>this-&gt;algorithm<sp/>=<sp/>algorithm;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputType&gt;<sp/><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter&lt;InputType&gt;::IOHprofiler_experimenter</ref>(<ref refid="class_i_o_hprofiler__suite" kindref="compound">IOHprofiler_suite&lt;InputType&gt;</ref><sp/>suite,<sp/>std::shared_ptr&lt;IOHprofiler_csv_logger&gt;<sp/>csv_logger,<sp/>_algorithm<sp/>*<sp/>algorithm)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>configSuite<sp/>=<sp/>suite;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>config_csv_logger<sp/>=<sp/>csv_logger;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;algorithm<sp/>=<sp/>algorithm;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_i_o_hprofiler__experimenter_1a759a045f1d172fa1072ac1ff693d5640" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputType&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__experimenter_1a759a045f1d172fa1072ac1ff693d5640" kindref="member">IOHprofiler_experimenter&lt;InputType&gt;::_run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::clock_t<sp/>c_start_overall<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::string<sp/>info<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_experiment\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>info<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Suite:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;configSuite-&gt;IOHprofiler_suite_get_suite_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>info<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Problem:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vectorToString(this-&gt;configSuite-&gt;IOHprofiler_suite_get_problem_id())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>info<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Instance:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vectorToString(this-&gt;configSuite-&gt;IOHprofiler_suite_get_instance_id())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>info<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Dimension:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>vectorToString(this-&gt;configSuite-&gt;IOHprofiler_suite_get_dimension())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>print_info(info);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>this-&gt;config_csv_logger-&gt;track_suite(this-&gt;configSuite-&gt;IOHprofiler_suite_get_suite_name());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((current_problem<sp/>=<sp/>configSuite-&gt;get_next_problem())<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::clock_t<sp/>c_start<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>+=<sp/>std::to_string(current_problem-&gt;IOHprofiler_get_problem_id());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_d&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(current_problem-&gt;IOHprofiler_get_number_of_variables());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;_i&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(current_problem-&gt;IOHprofiler_get_instance_id());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>print_info(info);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;config_csv_logger-&gt;track_problem(current_problem-&gt;IOHprofiler_get_problem_id(),<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_number_of_variables(),<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_instance_id(),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_problem_name(),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_optimization_type());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>algorithm(current_problem,this-&gt;config_csv_logger);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>print_info(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(independent_runs<sp/>&gt;<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_problem<sp/>=<sp/>configSuite-&gt;get_current_problem();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;config_csv_logger-&gt;track_problem(current_problem-&gt;IOHprofiler_get_problem_id(),<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_number_of_variables(),<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_instance_id(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_problem_name(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_problem-&gt;IOHprofiler_get_optimization_type());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>algorithm(current_problem,this-&gt;config_csv_logger);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>print_info(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::clock_t<sp/>c_end<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>print_info(</highlight><highlight class="stringliteral">&quot;CPU<sp/>Time&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(1000.0<sp/>*<sp/>(c_end-c_start)<sp/>/<sp/>CLOCKS_PER_SEC)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>std::clock_t<sp/>c_end_overall<sp/>=<sp/>std::clock();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>print_info(</highlight><highlight class="stringliteral">&quot;Total<sp/>CPU<sp/>Time&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(1000.0<sp/>*<sp/>(c_end_overall-c_start_overall)<sp/>/<sp/>CLOCKS_PER_SEC)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputType&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter&lt;InputType&gt;::_set_independent_runs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>this-&gt;independent_runs<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputType&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter&lt;InputType&gt;::print_info</ref>(std::string<sp/>info)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>info<sp/>&lt;&lt;<sp/>std::flush;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputType&gt;<sp/>std::string<sp/><ref refid="class_i_o_hprofiler__experimenter" kindref="compound">IOHprofiler_experimenter&lt;InputType&gt;::vectorToString</ref>(std::vector&lt;int&gt;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>std::string<sp/>s<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>std::to_string(v[0]);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>!=<sp/>v.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(v[i]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Template/Experiments/IOHprofiler_experimenter.hpp"/>
  </compounddef>
</doxygen>
