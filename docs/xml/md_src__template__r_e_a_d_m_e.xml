<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="md_src__template__r_e_a_d_m_e" kind="page">
    <compoundname>md_src_Template_README</compoundname>
    <title>Source codes of IOHexperimenter</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>[This folder] includes common used codes of <bold>IOHexperimenter</bold>. For details of <computeroutput><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem</ref></computeroutput> and <computeroutput><ref refid="class_i_o_hprofiler__suite" kindref="compound">IOHprofiler_suite</ref></computeroutput>, please visit <ulink url="/src/Problems/">problem page</ulink> and <ulink url="/src/Suites">suite page</ulink>.</para>
<sect2 id="md_src__template__r_e_a_d_m_e_1autotoc_md6">
<title>IOHprofiler_transformation</title>
<para><ref refid="class_i_o_hprofiler__transformation" kindref="compound">IOHprofiler_transformation</ref><computeroutput>defines methods of transformation applied on</computeroutput>IOHprofiler_problem`. For the definition of methods, please visit <ulink url="https://iohprofiler.github.io/Benchmark/Transformation/">wikipage</ulink></para>
</sect2>
<sect2 id="md_src__template__r_e_a_d_m_e_1autotoc_md7">
<title>IOHprofiler_random</title>
<para><bold>IOHexperimenter</bold> supplies methods of generating random numbers, which can be used to reproduce same experiments with the same random seed.</para>
<para><computeroutput><ref refid="class_i_o_hprofiler__random" kindref="compound">IOHprofiler_random</ref></computeroutput> is a <computeroutput>class</computeroutput> of random methods, you can construct it with a specified random seed as: <programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="class_i_o_hprofiler__random" kindref="compound">IOHprofiler_random</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
</programlisting></para>
<para>And two random number generator methods are as follow.<itemizedlist>
<listitem><para><emphasis>double IOHprofiler_uniform_rand()</emphasis>, returns a random number from standard uniform distribution.</para>
</listitem><listitem><para><emphasis>double IOHprofiler_normal_rand()</emphasis>, returns a random number from standard normal distribution.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src__template__r_e_a_d_m_e_1autotoc_md8">
<title>IOHprofiler_observer</title>
<para><computeroutput><ref refid="class_i_o_hprofiler__observer" kindref="compound">IOHprofiler_observer</ref></computeroutput> defines triggers of recording evaluations, and <bold>logger</bold> classes inherit it to set up the time of recording.</para>
<para>Four strategies of recording evaluations are available,<itemizedlist>
<listitem><para><bold>complete tracking</bold>, provides the highest granularity, by storing information for each function evaluation. Use <emphasis>set_complete_flag(true)</emphasis> to enable this strategy,</para>
</listitem><listitem><para><bold>interval tracking</bold>, stores information for each $\tau$-th function evaluation. Use <emphasis>set_interval()</emphasis> to set $\tau &gt; 0$ to enable this stragety.</para>
</listitem><listitem><para><bold>target-based tracking</bold>, stores information for each iteration in which the best-so-far fitness improved. Use <emphasis>set_update_flag(true)</emphasis> to enbale this stragety.</para>
</listitem><listitem><para><bold>time-based tracking</bold>, stores information when the user-specified running time budgets are reached. These budget are evenly spaced in log-10 scale.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_src__template__r_e_a_d_m_e_1autotoc_md9">
<title>IOHprofier_class_generator</title>
<para><computeroutput>IOHprofiler_class_generator</computeroutput> supplied methods of registering and creating <computeroutput><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem</ref></computeroutput> and <computeroutput><ref refid="class_i_o_hprofiler__suite" kindref="compound">IOHprofiler_suite</ref></computeroutput>. </para>
</sect2>
    </detaileddescription>
  </compounddef>
</doxygen>
