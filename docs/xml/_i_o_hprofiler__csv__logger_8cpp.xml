<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="_i_o_hprofiler__csv__logger_8cpp" kind="file" language="C++">
    <compoundname>IOHprofiler_csv_logger.cpp</compoundname>
    <includes refid="_i_o_hprofiler__csv__logger_8h" local="yes">IOHprofiler_csv_logger.h</includes>
    <incdepgraph>
      <node id="7">
        <label>sys/stat.h</label>
      </node>
      <node id="19">
        <label>limits</label>
      </node>
      <node id="2">
        <label>IOHprofiler_csv_logger.h</label>
        <link refid="_i_o_hprofiler__csv__logger_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>IOHprofiler_problem.h</label>
        <link refid="_i_o_hprofiler__problem_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>IOHprofiler_problem.hpp</label>
        <link refid="_i_o_hprofiler__problem_8hpp_source"/>
      </node>
      <node id="16">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="20">
        <label>cfloat</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>src/Template/Loggers/IOHprofiler_csv_logger.cpp</label>
        <link refid="_i_o_hprofiler__csv__logger_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>coco_transformation.hpp</label>
        <link refid="coco__transformation_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IOHprofiler_observer.h</label>
        <link refid="_i_o_hprofiler__observer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IOHprofiler_common.h</label>
        <link refid="_i_o_hprofiler__common_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>IOHprofiler_transformation.h</label>
        <link refid="_i_o_hprofiler__transformation_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="17">
        <label>cstdlib</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="26">
        <label>IOHprofiler_random.h</label>
        <link refid="_i_o_hprofiler__random_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstddef</label>
      </node>
      <node id="28">
        <label>suite_bbob_legacy_code.hpp</label>
        <link refid="suite__bbob__legacy__code_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>IOHprofiler_platform.h</label>
        <link refid="_i_o_hprofiler__platform_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>coco_transformation_vars.hpp</label>
        <link refid="coco__transformation__vars_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>coco_transformation_objs.hpp</label>
        <link refid="coco__transformation__objs_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>memory</label>
      </node>
      <node id="9">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>cpp file for the class <ref refid="class_i_o_hprofiler__csv__logger" kindref="compound">IOHprofiler_csv_logger</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>A detailed file description.</para>
<para><simplesect kind="author"><para>Furong Ye </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_o_hprofiler__csv__logger_8h" kindref="compound">IOHprofiler_csv_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">IOHprofiler_csv_logger::IOHprofiler_csv_logger()<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>this-&gt;output_directory<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>this-&gt;folder_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>this-&gt;algorithm_name<sp/>=<sp/><sp/></highlight><highlight class="stringliteral">&quot;algorithm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>this-&gt;algorithm_info<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;algorithm_info&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">IOHprofiler_csv_logger::IOHprofiler_csv_logger(std::string<sp/>directory,<sp/>std::string<sp/>folder_name,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>alg_name,<sp/>std::string<sp/>alg_info)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>this-&gt;output_directory<sp/>=<sp/>directory;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>this-&gt;folder_name<sp/>=<sp/>folder_name;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>this-&gt;algorithm_name<sp/>=<sp/><sp/>alg_name;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>this-&gt;algorithm_info<sp/>=<sp/>alg_info;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">IOHprofiler_csv_logger::~IOHprofiler_csv_logger()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_i_o_hprofiler__csv__logger_1a4fab14ee5627fcfed621cfe8bdfd65fe" kindref="member">clear_logger</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::folder_exist(std::string<sp/>folder_name)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(_WIN64)<sp/>||<sp/>defined(__MINGW64__)<sp/>||<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>DWORD<sp/>ftyp<sp/>=<sp/>GetFileAttributesA(folder_name.c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(ftyp<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::fstream<sp/>_file;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>_file.open(folder_name,<sp/>std::ios::in);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(!_file)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>existence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(_WIN64)<sp/>||<sp/>defined(__MINGW64__)<sp/>||<sp/>defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_access(folder_name.c_str(),<sp/>0<sp/>)<sp/>!=<sp/>-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>write<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>file<sp/>is<sp/>read-only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>_access(folder_name.c_str(),<sp/>2<sp/>)<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>access(folder_name.c_str(),<sp/>F_OK<sp/>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>access(folder_name.c_str(),<sp/>W_OK<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::activate_logger()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>openIndex();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::openIndex()<sp/>{<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>std::string<sp/>experiment_folder_name<sp/>=<sp/>IOHprofiler_experiment_folder_name();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IOHprofiler_create_folder(experiment_folder_name);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::IOHprofiler_create_folder(std::string<sp/>folder_name)<sp/>{<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(_WIN64)<sp/>||<sp/>defined(__MINGW64__)<sp/>||<sp/>defined(__CYGWIN__)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mkdir(folder_name.c_str())<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mkdir(folder_name.c_str(),S_IRWXU)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>creating<sp/>directory&quot;</highlight><highlight class="normal"><sp/>+<sp/>folder_name);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">std::string<sp/>IOHprofiler_csv_logger::IOHprofiler_experiment_folder_name()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::string<sp/>renamed_directory<sp/>=<sp/>this-&gt;output_directory<sp/>+<sp/>IOHprofiler_path_separator<sp/>+<sp/>this-&gt;folder_name;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::string<sp/>temp_folder_name<sp/>=<sp/>this-&gt;folder_name;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//while<sp/>(fs::exists(renamed_directory.c_str()))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(folder_exist(renamed_directory)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_folder_name<sp/>=<sp/>this-&gt;folder_name<sp/><sp/>+<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>+<sp/>_toString(index);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>renamed_directory<sp/>=<sp/>this-&gt;output_directory<sp/>+<sp/>IOHprofiler_path_separator<sp/>+<sp/>temp_folder_name;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>this-&gt;folder_name<sp/>=<sp/>temp_folder_name;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>renamed_directory;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::write_header()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::string<sp/>sub_directory_name<sp/>=<sp/>this-&gt;output_directory<sp/>+<sp/>IOHprofiler_path_separator<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>this-&gt;folder_name<sp/>+<sp/>IOHprofiler_path_separator</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;data_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>problem_name;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::string<sp/>dat_header<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;function<sp/>evaluation\&quot;<sp/>\&quot;current<sp/>f(x)\&quot;<sp/>\&quot;best-so-far<sp/>f(x)\&quot;<sp/>\&quot;current<sp/>af(x)+b\&quot;<sp/><sp/>\&quot;best<sp/>af(x)+b\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;logging_parameters.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,<sp/>std::shared_ptr&lt;double&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;logging_parameters.begin();<sp/>iter<sp/>!=<sp/>this-&gt;logging_parameters.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dat_header<sp/>=<sp/>dat_header<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>iter-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(!fs::exists(sub_directory_name.c_str()))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!folder_exist(sub_directory_name))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_create_folder(sub_directory_name.c_str());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(complete_status())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cdat_name<sp/>=<sp/>sub_directory_name<sp/>+<sp/>IOHprofiler_path_separator<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_DIM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.cdat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cdat.close();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cdat.open(cdat_name.c_str(),std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;cdat<sp/>&lt;&lt;<sp/>dat_header<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cdat_buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(dat_header+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,this-&gt;cdat_buffer,this-&gt;cdat);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interval_status())<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>idat_name<sp/>=<sp/>sub_directory_name<sp/>+<sp/>IOHprofiler_path_separator<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_DIM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.idat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;idat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;idat.close();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;idat.open(idat_name.c_str(),std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;idat<sp/>&lt;&lt;<sp/>dat_header<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;idat_buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(dat_header+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,this-&gt;idat_buffer,this-&gt;idat);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update_status())<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>dat_name<sp/>=<sp/>sub_directory_name<sp/>+<sp/>IOHprofiler_path_separator<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_DIM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dat.close();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dat_buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dat.open(dat_name.c_str(),std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;dat<sp/>&lt;&lt;<sp/>dat_header<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(dat_header+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,this-&gt;dat_buffer,this-&gt;dat);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_points_status())<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tdat_name<sp/>=<sp/>sub_directory_name<sp/>+<sp/>IOHprofiler_path_separator<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_DIM&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.tdat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;tdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tdat.close();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tdat_buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tdat.open(tdat_name.c_str(),std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;tdat<sp/>&lt;&lt;<sp/>dat_header<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(dat_header+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,this-&gt;tdat_buffer,this-&gt;tdat);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a0b93c60fa1248c3af490e54997bfc477" kindref="member">IOHprofiler_csv_logger::track_problem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>problem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>problem_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IOH_optimization_type<sp/>maximization_minimization_flag){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infoFile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>write_info(this-&gt;instance,<sp/>this-&gt;best_y[0],<sp/>this-&gt;best_transformed_y[0],<sp/>this-&gt;optimal_evaluations,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;last_y[0],<sp/>this-&gt;last_transformed_y[0],<sp/>this-&gt;last_evaluations);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>this-&gt;optimal_evaluations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>this-&gt;last_evaluations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximization_minimization_flag<sp/>==<sp/>IOH_optimization_type::Maximization)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_y.clear();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_y.push_back(-DBL_MAX);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_transformed_y.clear();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_transformed_y.push_back(-DBL_MAX);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_y.clear();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_y.push_back(-DBL_MAX);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_transformed_y.clear();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_transformed_y.push_back(-DBL_MAX);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_y.clear();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_y.push_back(DBL_MAX);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_transformed_y.clear();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;best_transformed_y.push_back(DBL_MAX);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_y.clear();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_y.push_back(DBL_MAX);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_transformed_y.clear();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_transformed_y.push_back(DBL_MAX);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>reset_observer(maximization_minimization_flag);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>this-&gt;problem_id<sp/>=<sp/>problem_id;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>this-&gt;dimension<sp/>=<sp/>dimension;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>this-&gt;instance<sp/>=<sp/>instance;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>this-&gt;problem_name<sp/>=<sp/>problem_name;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>this-&gt;maximization_minimization_flag<sp/>=<sp/>maximization_minimization_flag;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>openInfo(problem_id,dimension,problem_name);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>header_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a0b93c60fa1248c3af490e54997bfc477" kindref="member">IOHprofiler_csv_logger::track_problem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem&lt;int&gt;</ref><sp/>&amp;<sp/>problem)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;tracked_problem_int<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;tracked_problem_double<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_i_o_hprofiler__csv__logger_1a0b93c60fa1248c3af490e54997bfc477" kindref="member">track_problem</ref>(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_problem_id(),<sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_number_of_variables(),<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_instance_id(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_problem_name(),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_optimization_type()</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;problem_type<sp/>=<sp/>problem.IOHprofiler_get_problem_type();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;tracked_problem_int<sp/>=<sp/>std::make_shared&lt;IOHprofiler_problem&lt;int&gt;<sp/>&gt;(problem);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a0b93c60fa1248c3af490e54997bfc477" kindref="member">IOHprofiler_csv_logger::track_problem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem&lt;double&gt;</ref><sp/>&amp;<sp/>problem)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;tracked_problem_int<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;tracked_problem_double<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_i_o_hprofiler__csv__logger_1a0b93c60fa1248c3af490e54997bfc477" kindref="member">track_problem</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_problem_id(),<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_number_of_variables(),<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_instance_id(),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_problem_name(),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>problem.IOHprofiler_get_optimization_type()</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;problem_type<sp/>=<sp/>problem.IOHprofiler_get_problem_type();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;tracked_problem_double<sp/>=<sp/>std::make_shared&lt;IOHprofiler_problem&lt;double&gt;<sp/>&gt;(problem);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::track_suite(std::string<sp/>suite_name){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>this-&gt;suite_name<sp/>=<sp/>suite_name;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::set_parameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;double&gt;<sp/>&gt;<sp/>&amp;parameters)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;logging_parameters.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters.clear();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>parameters.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters[</highlight><highlight class="stringliteral">&quot;parameter&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(i+1)]<sp/>=<sp/>parameters[i];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::set_parameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;double&gt;<sp/>&gt;<sp/>&amp;parameters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;parameters_name)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters_name.size()<sp/>!=<sp/>parameters.size())<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Parameters<sp/>and<sp/>their<sp/>names<sp/>are<sp/>given<sp/>with<sp/>different<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;logging_parameters.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters.clear();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>parameters.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters[parameters_name[i]]<sp/>=<sp/>parameters[i];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a49e60aadaeb5889cf46c4faddb0450e5" kindref="member">IOHprofiler_csv_logger::set_parameters_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string<sp/>&gt;<sp/>&amp;parameters_name)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;logging_parameters.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters.clear();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//default<sp/>value<sp/>set<sp/>as<sp/>-9999.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>parameters_name.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters[parameters_name[i]]<sp/>=<sp/>std::make_shared&lt;double&gt;(-9999);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a49e60aadaeb5889cf46c4faddb0450e5" kindref="member">IOHprofiler_csv_logger::set_parameters_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string<sp/>&gt;<sp/>&amp;parameters_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;initial_parameters)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters_name.size()<sp/>!=<sp/>initial_parameters.size())<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Parameters<sp/>and<sp/>their<sp/>names<sp/>are<sp/>given<sp/>with<sp/>different<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//default<sp/>value<sp/>set<sp/>as<sp/>-9999.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>parameters_name.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logging_parameters[parameters_name[i]]<sp/>=<sp/>std::make_shared&lt;double&gt;(initial_parameters[i]);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::set_parameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string<sp/>&gt;<sp/>&amp;parameters_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;parameters)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters_name.size()<sp/>!=<sp/>parameters.size())<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Parameters<sp/>and<sp/>their<sp/>names<sp/>are<sp/>given<sp/>with<sp/>different<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>parameters_name.size();<sp/>++i)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;logging_parameters.find(parameters_name[i])<sp/>!=<sp/>this-&gt;logging_parameters.end())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>*this-&gt;logging_parameters[parameters_name[i]]<sp/>=<sp/>parameters[i];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Parameter<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>parameters_name[i]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::add_dynamic_attribute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;double&gt;<sp/>&gt;<sp/>&amp;attributes)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;attr_per_run_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value.clear();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>attributes.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value[</highlight><highlight class="stringliteral">&quot;attr&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(i+1)]<sp/>=<sp/>attributes[i];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::add_dynamic_attribute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;double&gt;<sp/>&gt;<sp/>&amp;attributes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;attributes_name)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attributes_name.size()<sp/>!=<sp/>attributes.size())<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Attributes<sp/>and<sp/>their<sp/>names<sp/>are<sp/>given<sp/>with<sp/>different<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;attr_per_run_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value.clear();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>attributes.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value[attributes_name[i]]<sp/>=<sp/>attributes[i];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a4cfc830441e39bc0e55466f50395b06d" kindref="member">IOHprofiler_csv_logger::set_dynamic_attributes_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string<sp/>&gt;<sp/>&amp;attributes_name)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;attr_per_run_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value.clear();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//default<sp/>value<sp/>set<sp/>as<sp/>-9999.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>attributes_name.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value[attributes_name[i]]<sp/>=<sp/>std::make_shared&lt;double&gt;(-9999);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a4cfc830441e39bc0e55466f50395b06d" kindref="member">IOHprofiler_csv_logger::set_dynamic_attributes_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string<sp/>&gt;<sp/>&amp;attributes_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;initial_attributes)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attributes_name.size()<sp/>!=<sp/>initial_attributes.size())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Attributes<sp/>and<sp/>their<sp/>names<sp/>are<sp/>given<sp/>with<sp/>different<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//default<sp/>value<sp/>set<sp/>as<sp/>-9999.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>attributes_name.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;attr_per_run_name_value[attributes_name[i]]<sp/>=<sp/>std::make_shared&lt;double&gt;(initial_attributes[i]);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a25fde5d796d10b6a1e3687ec871fdaf6" kindref="member">IOHprofiler_csv_logger::set_dynamic_attributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string<sp/>&gt;<sp/>&amp;attributes_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;attributes)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attributes_name.size()<sp/>!=<sp/>attributes.size())<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Attributes<sp/>and<sp/>their<sp/>names<sp/>are<sp/>given<sp/>with<sp/>different<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>attributes_name.size();<sp/>++i)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;attr_per_run_name_value.find(attributes_name[i])<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end())<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>*this-&gt;attr_per_run_name_value[attributes_name[i]]<sp/>=<sp/>attributes[i];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Dynamic<sp/>attributes<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>attributes_name[i]<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::do_log(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>log_info)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_i_o_hprofiler__csv__logger_1ac2db3cc935c83ffb9832ef2c2b35390b" kindref="member">write_line</ref>(<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(log_info[0]),log_info[1],log_info[2],log_info[3],log_info[4]);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1ac2db3cc935c83ffb9832ef2c2b35390b" kindref="member">IOHprofiler_csv_logger::write_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;<sp/>log_info)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_i_o_hprofiler__csv__logger_1ac2db3cc935c83ffb9832ef2c2b35390b" kindref="member">write_line</ref>(<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(log_info[0]),log_info[1],log_info[2],log_info[3],log_info[4]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1ac2db3cc935c83ffb9832ef2c2b35390b" kindref="member">IOHprofiler_csv_logger::write_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>evaluations,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_so_far_y,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transformed_y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_so_far_transformed_y)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header_flag<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_header();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>header_flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>this-&gt;last_evaluations<sp/>=<sp/>evaluations;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>this-&gt;last_y[0]<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>this-&gt;last_transformed_y[0]<sp/>=<sp/>transformed_y;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cdat_flag<sp/>=<sp/>complete_trigger();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idat_flag<sp/>=<sp/>interval_trigger(evaluations);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dat_flag<sp/>=<sp/>update_trigger(transformed_y,maximization_minimization_flag);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tdat_flag<sp/>=<sp/><ref refid="class_i_o_hprofiler__observer_1a9d7835270a15184058a65bae8c9ad41a" kindref="member">time_points_trigger</ref>(evaluations);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>need_write<sp/>=<sp/><sp/>cdat_flag<sp/>||<sp/>idat_flag<sp/>||<sp/>dat_flag<sp/>||<sp/>tdat_flag;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_write)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>written_line<sp/>=<sp/>_toString(evaluations)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(best_so_far_y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(transformed_y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(best_so_far_transformed_y);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;logging_parameters.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,<sp/>std::shared_ptr&lt;double&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;logging_parameters.begin();<sp/>iter<sp/>!=<sp/>this-&gt;logging_parameters.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written_line<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written_line<sp/>+=<sp/>_toString(*(iter-&gt;second));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>written_line<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdat_flag)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;cdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;*.cdat<sp/>file<sp/>is<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;cdat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;cdat_buffer,this-&gt;cdat);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idat_flag)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;idat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;*.idat<sp/>file<sp/>is<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;idat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;idat_buffer,this-&gt;idat);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dat_flag)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;dat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;*.dat<sp/>file<sp/>is<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;dat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;dat_buffer,this-&gt;dat);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tdat_flag)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;tdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;*.tdat<sp/>file<sp/>is<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;tdat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;tdat_buffer,this-&gt;tdat);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compareObjectives(transformed_y,this-&gt;best_transformed_y[0],this-&gt;maximization_minimization_flag))<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_i_o_hprofiler__csv__logger_1a791a3106d1836ae9059054d9bc4b73ca" kindref="member">update_logger_info</ref>(evaluations,y,transformed_y);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::openInfo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>problem_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension,<sp/>std::string<sp/>problem_name)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>this-&gt;info_buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>std::string<sp/>titleflag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>std::string<sp/>optimization_type;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;maximization_minimization_flag<sp/>==<sp/>IOH_optimization_type::Maximization)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>optimization_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>optimization_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(problem_id<sp/>!=<sp/>this-&gt;last_problem_id)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;infoFile.close();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>infoFile_name<sp/>=<sp/>this-&gt;output_directory<sp/>+<sp/>IOHprofiler_path_separator<sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>this-&gt;folder_name<sp/>+<sp/>IOHprofiler_path_separator</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>problem_name</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.info&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(fs::exists(infoFile_name.c_str()))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(folder_exist(infoFile_name))<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>titleflag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;infoFile.open(infoFile_name.c_str(),std::ofstream::out<sp/>|<sp/>std::ofstream::app);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>titleflag;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>titleflag;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;suite<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>this-&gt;suite_name<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>funcId<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>problem_id<sp/>&lt;&lt;<sp/>&quot;,<sp/>funcName<sp/>=<sp/>\&quot;&quot;&lt;&lt;<sp/>problem_name<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>DIM<sp/>=<sp/>&quot;<sp/><sp/>&lt;&lt;<sp/>dimension<sp/>&lt;&lt;<sp/>&quot;,<sp/>maximization<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>optimization_type<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>algId<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>this-&gt;algorithm_name<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>algInfo<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>this-&gt;algorithm_info<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;suite<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;suite_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>funcId<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>funcName<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>problem_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>DIM<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>maximization<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>optimization_type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>algId<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;algorithm_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>algInfo<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;algorithm_info<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;attr_per_exp_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,std::string&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;attr_per_exp_name_value.begin();<sp/>iter<sp/>!=<sp/>this-&gt;attr_per_exp_name_value.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>iter-&gt;second<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>iter-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>iter-&gt;second<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;attr_per_run_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;,<sp/>dynamicAttribute<sp/>=<sp/>\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>dynamicAttribute<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,std::shared_ptr&lt;double&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;attr_per_run_name_value.begin();<sp/>iter<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end();)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;|&quot;<sp/>&lt;&lt;<sp/>iter-&gt;first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(iter-&gt;first);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++iter<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end())<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;\n%\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;\n%\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;data_f&quot;<sp/>&lt;&lt;<sp/>problem_id<sp/>&lt;&lt;<sp/>&quot;_&quot;<sp/>&lt;&lt;<sp/>problem_name<sp/>&lt;&lt;<sp/>&quot;/IOHprofiler_f&quot;<sp/>&lt;&lt;<sp/>problem_id<sp/>&lt;&lt;<sp/>&quot;_DIM&quot;<sp/>&lt;&lt;<sp/>dimension<sp/>&lt;&lt;<sp/>&quot;.dat&quot;;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;data_f&quot;</highlight><highlight class="normal"><sp/>+<sp/><sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>problem_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_DIM&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;info_buffer,this-&gt;infoFile);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer.clear();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_problem_id<sp/>=<sp/>problem_id;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_dimension<sp/>=<sp/>dimension;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dimension<sp/>!=<sp/>this-&gt;last_dimension)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;\nsuite<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>this-&gt;suite_name<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>funcId<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>problem_id<sp/>&lt;&lt;<sp/>&quot;,<sp/>funcName<sp/>=<sp/>\&quot;&quot;&lt;&lt;<sp/>problem_name<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>DIM<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>dimension<sp/>&lt;&lt;<sp/>&quot;,<sp/>maximization<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>optimization_type<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>algId<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>this-&gt;algorithm_name<sp/>&lt;&lt;<sp/>&quot;\&quot;,<sp/>algInfo<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>this-&gt;algorithm_info<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;\nsuite<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;suite_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>funcId<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>funcName<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>problem_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>DIM<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>maximization<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>optimization_type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>algId<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;algorithm_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>algInfo<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;algorithm_info<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;attr_per_exp_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,std::string&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;attr_per_exp_name_value.begin();<sp/>iter<sp/>!=<sp/>this-&gt;attr_per_exp_name_value.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/>&quot;<sp/>=<sp/>\&quot;&quot;<sp/>&lt;&lt;<sp/>iter-&gt;second<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>iter-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>+<sp/>iter-&gt;second<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;attr_per_run_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;,<sp/>dynamicAttribute<sp/>=<sp/>\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;,<sp/>dynamicAttribute<sp/>=<sp/>\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,std::shared_ptr&lt;double&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;attr_per_run_name_value.begin();<sp/>iter<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end();)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;|&quot;<sp/>&lt;&lt;<sp/>iter-&gt;first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(iter-&gt;first);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++iter<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end())<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;\n%\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;data_f&quot;<sp/>&lt;&lt;<sp/>problem_id<sp/>&lt;&lt;<sp/>&quot;_&quot;<sp/>&lt;&lt;<sp/>problem_name<sp/>&lt;&lt;<sp/>&quot;/IOHprofiler_f&quot;<sp/>&lt;&lt;<sp/>problem_id<sp/>&lt;&lt;<sp/>&quot;_DIM&quot;<sp/>&lt;&lt;<sp/>dimension<sp/>&lt;&lt;<sp/>&quot;.dat&quot;;<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;data_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>problem_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/IOHprofiler_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(problem_id)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_DIM&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(dimension)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;info_buffer,this-&gt;infoFile);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer.clear();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_problem_id<sp/>=<sp/>problem_id;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;last_dimension<sp/>=<sp/>dimension;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::write_info(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best_transformed_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>evaluations,<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>last_transformed_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_evaluations)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!infoFile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;write_info():<sp/>writing<sp/>info<sp/>into<sp/>unopened<sp/>infoFile&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>this-&gt;info_buffer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//infoFile<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>instance<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>evaluations<sp/>&lt;&lt;<sp/>&quot;|&quot;<sp/>&lt;&lt;<sp/>best_y;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(instance)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(evaluations)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(best_y));</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;attr_per_run_name_value.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,std::shared_ptr&lt;double&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;attr_per_run_name_value.begin();<sp/>iter<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;infoFile<sp/>&lt;&lt;<sp/>&quot;|&quot;<sp/>&lt;&lt;<sp/>*(iter-&gt;second);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(_toString(*(iter-&gt;second)));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++iter<sp/>!=<sp/>this-&gt;attr_per_run_name_value.end())<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;info_buffer<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>this-&gt;write_stream(this-&gt;info_buffer,this-&gt;infoFile);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>this-&gt;info_buffer.clear();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>need_write<sp/>=<sp/>(evaluations<sp/>!=<sp/>last_evaluations);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_write)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>written_line<sp/>=<sp/>_toString(last_evaluations)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(last_y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(best_y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>_toString(last_transformed_y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>_toString(best_transformed_y);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;logging_parameters.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,<sp/>std::shared_ptr&lt;double&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/>this-&gt;logging_parameters.begin();<sp/>iter<sp/>!=<sp/>this-&gt;logging_parameters.end();<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written_line<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written_line<sp/>+=<sp/>_toString(*(iter-&gt;second));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>written_line<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;cdat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;cdat_buffer,this-&gt;cdat);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;cdat_buffer,this-&gt;cdat);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cdat.flush();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cdat_buffer.clear();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;idat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;idat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;idat_buffer,this-&gt;idat);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;idat_buffer,this-&gt;idat);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;idat.flush();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;idat_buffer.clear();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;dat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;dat_buffer,this-&gt;dat);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;dat_buffer,this-&gt;dat);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dat.flush();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dat_buffer.clear();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;tdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;tdat<sp/>&lt;&lt;<sp/>written_line;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_in_buffer(written_line,this-&gt;tdat_buffer,this-&gt;tdat);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;tdat_buffer,this-&gt;tdat);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tdat.flush();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tdat_buffer.clear();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;cdat_buffer,this-&gt;cdat);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cdat.flush();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cdat_buffer.clear();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;idat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;idat_buffer,this-&gt;idat);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;idat.flush();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;idat_buffer.clear();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;dat_buffer,this-&gt;dat);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dat.flush();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dat_buffer.clear();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;tdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;write_stream(this-&gt;tdat_buffer,this-&gt;tdat);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tdat.flush();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tdat_buffer.clear();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::write_stream(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>buffer_string,<sp/>std::fstream<sp/>&amp;<sp/>dat_stream)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>dat_stream.write(buffer_string.c_str(),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*buffer_string.size());</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//dat_stream<sp/>&lt;&lt;<sp/>buffer_string;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::write_in_buffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>add_string,<sp/>std::string<sp/>&amp;<sp/>buffer_string,<sp/>std::fstream<sp/>&amp;<sp/>dat_stream)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer_string.size()<sp/>+<sp/>add_string.size()<sp/>&lt;<sp/>MAX_BUFFER_SIZE)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_string<sp/>=<sp/>buffer_string<sp/>+<sp/>add_string;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>write_stream(buffer_string,dat_stream);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_string.clear();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_string<sp/>=<sp/>add_string;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a791a3106d1836ae9059054d9bc4b73ca" kindref="member">IOHprofiler_csv_logger::update_logger_info</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>optimal_evaluations,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transformed_y)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>this-&gt;optimal_evaluations<sp/>=<sp/>optimal_evaluations;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>this-&gt;best_y[0]<sp/>=<sp/><sp/>y;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>this-&gt;best_transformed_y[0]<sp/>=<sp/>transformed_y;</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::add_attribute(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>this-&gt;attr_per_exp_name_value[name]<sp/>=<sp/>_toString(value);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::add_attribute(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>this-&gt;attr_per_exp_name_value[name]<sp/>=<sp/>_toString(value);</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::add_attribute(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>this-&gt;attr_per_exp_name_value[name]<sp/>=<sp/>_toString(value);</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::add_attribute(std::string<sp/>name,<sp/>std::string<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>this-&gt;attr_per_exp_name_value[name]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IOHprofiler_csv_logger::delete_attribute(std::string<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>this-&gt;attr_per_exp_name_value.erase(name);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__csv__logger_1a4fab14ee5627fcfed621cfe8bdfd65fe" kindref="member">IOHprofiler_csv_logger::clear_logger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infoFile.is_open())<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>write_info(this-&gt;instance,<sp/>this-&gt;best_y[0],<sp/>this-&gt;best_transformed_y[0],<sp/>this-&gt;optimal_evaluations,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;last_y[0],<sp/>this-&gt;last_transformed_y[0],<sp/>this-&gt;last_evaluations);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>infoFile.close();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>cdat.close();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>idat.close();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>dat.close();</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tdat.is_open())<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>tdat.close();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(this-&gt;tracked_problem_double<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>this-&gt;tracked_problem_double<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if(this-&gt;tracked_problem_int<sp/>!=<sp/>nullptr)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>this-&gt;tracked_problem_int<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/Template/Loggers/IOHprofiler_csv_logger.cpp"/>
  </compounddef>
</doxygen>
