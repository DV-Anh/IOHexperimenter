<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="_suites_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">##<sp/>Suites<sp/>of<sp/>IOHexperimenter</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[IOHprofiler_suite](/src/Template/IOHprofiler_suite.hpp)<sp/>is<sp/>the<sp/>base<sp/>`class`<sp/>of<sp/>suites<sp/>of<sp/>__IOHexperimenter__.<sp/>The<sp/>property<sp/>variables<sp/>of<sp/>problems<sp/>include:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`problem_id`,<sp/>a<sp/>vector<sp/>containing<sp/>the<sp/>ids<sp/>of<sp/>the<sp/>problems<sp/>to<sp/>be<sp/>tested.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`instance_id`,<sp/>a<sp/>vector<sp/>containing<sp/>the<sp/>ids<sp/>of<sp/>the<sp/>instances<sp/>of<sp/>the<sp/>problems.<sp/>Intance<sp/>ids<sp/>specify<sp/>which<sp/>transformations<sp/>will<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>problem.<sp/>The<sp/>original<sp/>problem<sp/>has<sp/>instance_id<sp/>1;<sp/>&lt;i&gt;scale&lt;/i&gt;<sp/>and<sp/>&lt;i&gt;shift&lt;/i&gt;<sp/>are<sp/>applied<sp/>on<sp/>objectives<sp/>for<sp/>instance_id<sp/>in<sp/>[2,100];<sp/>&lt;i&gt;XOR&lt;/i&gt;<sp/>will<sp/>be<sp/>applied<sp/>on<sp/>variables<sp/>for<sp/>instance_id<sp/>in<sp/>[2,50],<sp/>and<sp/>&lt;i&gt;sigma&lt;/i&gt;<sp/>function<sp/>is<sp/>applied<sp/>on<sp/>variables<sp/>for<sp/>instance_id<sp/>in<sp/>[51,100].</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`dimension`,<sp/>a<sp/>vector<sp/>containing<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>problems.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`number_of_problems`</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`number_of_instances`</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`number_of_dimensions`</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>functions<sp/>for<sp/>experiments<sp/>are<sp/>available<sp/>to<sp/>a<sp/>suite:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;get_next_problem&lt;/i&gt;,<sp/>return<sp/>a<sp/>shared<sp/>point<sp/>of<sp/>problems<sp/>of<sp/>the<sp/>suite<sp/>in<sp/>order.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;addCSVLogger(logger)&lt;/i&gt;,<sp/>assigns<sp/>a<sp/>__IOHprofiler_csv_logger__<sp/>class<sp/>to<sp/>the<sp/>suite.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;IOHprofiler_set_suite_problem_id(problem_id)&lt;/i&gt;</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;IOHprofiler_set_suite_instance_id(instance_id)&lt;/i&gt;</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;IOHprofiler_set_suite_dimension(dimension)&lt;/i&gt;</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;mapIDTOName&lt;/i&gt;,<sp/>is<sp/>to<sp/>match<sp/>problem<sp/>id<sp/>and<sp/>name.<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Creating<sp/>a<sp/>suite</highlight></codeline>
<codeline><highlight class="normal">__IOHexperimenter__<sp/>provides<sp/>a<sp/>__PBO_suite__<sp/>for<sp/>pseudo<sp/>Boolean<sp/>problems,<sp/>but<sp/>it<sp/>is<sp/>also<sp/>easy<sp/>to<sp/>add<sp/>your<sp/>own<sp/>suite.<sp/>Creating<sp/>a<sp/>suite<sp/>is<sp/>done<sp/>by<sp/>registering<sp/>problems<sp/>in<sp/>the<sp/>suite<sp/>and<sp/>assigning<sp/>ids<sp/>to<sp/>them.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Taking<sp/>the<sp/>implementation<sp/>of<sp/>__PBO_suite__<sp/>as<sp/>an<sp/>example,<sp/>&lt;i&gt;constructor<sp/>functions&lt;/i&gt;<sp/>are<sp/>as<sp/>below.<sp/>In<sp/>the<sp/>constructor<sp/>functions,<sp/>the<sp/>range<sp/>of<sp/>allowed<sp/>`problem_id`,<sp/>`instance_id`<sp/>and<sp/>`dimension`<sp/>should<sp/>be<sp/>identified.<sp/>In<sp/>addition,<sp/>&lt;i&gt;registerProblem()&lt;/i&gt;<sp/>must<sp/>be<sp/>included<sp/>in<sp/>the<sp/>constructor<sp/>functions.</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">PBO_suite()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>problem_id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>instance_id;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>dimension;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>23;<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>problem_id.push_back(i+1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>instance_id.push_back(i+1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>dimension.push_back(100);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_problem_id(problem_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_instance_id(instance_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_dimension(dimension);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_name(&quot;PBO&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerProblem();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PBO_suite(std::vector&lt;int&gt;<sp/>problem_id,<sp/>std::vector&lt;int&gt;<sp/>instance_id,<sp/>std::vector&lt;int&gt;<sp/>dimension)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>problem_id.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(problem_id[i]<sp/>&lt;<sp/>0<sp/>||<sp/>problem_id[i]<sp/>&gt;<sp/>23)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(&quot;problem_id<sp/>&quot;<sp/>+<sp/>std::to_string(problem_id[i])<sp/>+<sp/>&quot;<sp/>is<sp/>not<sp/>in<sp/>PBO_suite&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>instance_id.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(instance_id[i]<sp/>&lt;<sp/>0<sp/>||<sp/>instance_id[i]<sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(&quot;instance_id<sp/>&quot;<sp/>+<sp/>std::to_string(instance_id[i])<sp/>+<sp/>&quot;<sp/>is<sp/>not<sp/>in<sp/>PBO_suite&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimension.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(dimension[i]<sp/>&lt;<sp/>0<sp/>||<sp/>dimension[i]<sp/>&gt;<sp/>20000)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(&quot;dimension<sp/>&quot;<sp/>+<sp/>std::to_string(dimension[i])<sp/>+<sp/>&quot;<sp/>is<sp/>not<sp/>in<sp/>PBO_suite&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_problem_id(problem_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_instance_id(instance_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_dimension(dimension);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_suite_name(&quot;PBO&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerProblem();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;i&gt;registerProblem()&lt;/i&gt;<sp/>is<sp/>a<sp/>virtual<sp/>function<sp/>of<sp/>the<sp/>base<sp/>`IOHprofiler_suite`<sp/>class.<sp/>When<sp/>you<sp/>create<sp/>a<sp/>suite,<sp/>it<sp/>__must__<sp/>be<sp/>implemented.<sp/>Problems<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>suite<sp/>can<sp/>be<sp/>registered<sp/>by<sp/>name.<sp/>Afterwards,<sp/>problem<sp/>id<sp/>and<sp/>name<sp/>should<sp/>be<sp/>mapped<sp/>through<sp/>&lt;i&gt;mapIDTOName&gt;&lt;/i&gt;<sp/>function,<sp/>which<sp/>enables<sp/>the<sp/>suite<sp/>to<sp/>recognize<sp/>problems<sp/>by<sp/>problem<sp/>id.<sp/>Following<sp/>is<sp/>the<sp/>&lt;i&gt;registerProblem()&lt;/i&gt;<sp/>function<sp/>of<sp/>__PBO_suite__.</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax&gt;<sp/>regOneMax(&quot;OneMax&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Dummy1&gt;<sp/>regOneMax_Dummy1(&quot;OneMax_Dummy1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Dummy2&gt;<sp/>regOneMax_Dummy2(&quot;OneMax_Dummy2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Epistasis&gt;<sp/>regOneMax_Epistasis(&quot;OneMax_Epistasis&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Neutrality&gt;<sp/>regOneMax_Neutrality(&quot;OneMax_Neutrality&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Ruggedness1&gt;<sp/>regOneMax_Ruggedness1(&quot;OneMax_Ruggedness1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Ruggedness2&gt;<sp/>regOneMax_Ruggedness2(&quot;OneMax_Ruggedness2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax_Ruggedness3&gt;<sp/>regOneMax_Ruggedness3(&quot;OneMax_Ruggedness3&quot;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes&gt;<sp/>regLeadingOnes(&quot;LeadingOnes&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Dummy1&gt;<sp/>regLeadingOnes_Dummy1(&quot;LeadingOnes_Dummy1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Dummy2&gt;<sp/>regLeadingOnes_Dummy2(&quot;LeadingOnes_Dummy2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Epistasis&gt;<sp/>regLeadingOnes_Epistasis(&quot;LeadingOnes_Epistasis&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Neutrality&gt;<sp/>regLeadingOnes_Neutrality(&quot;LeadingOnes_Neutrality&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Ruggedness1&gt;<sp/>regLeadingOnes_Ruggedness1(&quot;LeadingOnes_Ruggedness1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Ruggedness2&gt;<sp/>regLeadingOnes_Ruggedness2(&quot;LeadingOnes_Ruggedness2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LeadingOnes_Ruggedness3&gt;<sp/>regLeadingOnes_Ruggedness3(&quot;LeadingOnes_Ruggedness3&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,Linear&gt;<sp/>regLinear(&quot;Linear&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,MIS&gt;<sp/>regMIS(&quot;MIS&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,LABS&gt;<sp/>regLABS(&quot;LABS&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,NQueens&gt;<sp/>regNQueens(&quot;NQueens&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,Ising_1D&gt;<sp/>regIsing_1D(&quot;Ising_1D&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,Ising_2D&gt;<sp/>regIsing_2D(&quot;Ising_2D&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,Ising_Triangle&gt;<sp/>regIsing_Triangle(&quot;Ising_Triangle&quot;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(1,&quot;OneMax&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(2,&quot;LeadingOnes&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(3,&quot;Linear&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(4,&quot;OneMax_Dummy1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(5,&quot;OneMax_Dummy2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(6,&quot;OneMax_Neutrality&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(7,&quot;OneMax_Epistasis&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(8,&quot;OneMax_Ruggedness1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(9,&quot;OneMax_Ruggedness2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(10,&quot;OneMax_Ruggedness3&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(11,&quot;LeadingOnes_Dummy1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(12,&quot;LeadingOnes_Dummy2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(13,&quot;LeadingOnes_Neutrality&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(14,&quot;LeadingOnes_Epistasis&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(15,&quot;LeadingOnes_Ruggedness1&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(16,&quot;LeadingOnes_Ruggedness2&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(17,&quot;LeadingOnes_Ruggedness3&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(18,&quot;LABS&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(22,&quot;MIS&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(19,&quot;Ising_1D&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(20,&quot;Ising_2D&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(21,&quot;Ising_Triangle&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>mapIDTOName(23,&quot;NQueens&quot;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>to<sp/>register<sp/>your<sp/>suite<sp/>called<sp/>`suite_name`,<sp/>please<sp/>add<sp/>following<sp/>codes<sp/>and<sp/>modify<sp/>names.</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">static<sp/>PBO_suite<sp/>*<sp/>createInstance()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>new<sp/>PBO_suite();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">static<sp/>PBO_suite<sp/>*<sp/>createInstance(std::vector&lt;int&gt;<sp/>problem_id,<sp/>std::vector&lt;int&gt;<sp/>instance_id,<sp/>std::vector&lt;int&gt;<sp/>dimension)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>new<sp/>PBO_suite(problem_id,<sp/>instance_id,<sp/>dimension);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">To<sp/>register<sp/>the<sp/>suite,<sp/>you<sp/>can<sp/>use<sp/>the<sp/>&lt;i&gt;genericGenerator&lt;/i&gt;<sp/>in<sp/>[IOHprofiler_class_generator](/src/Template/).<sp/>For<sp/>example,<sp/>you<sp/>can<sp/>use<sp/>the<sp/>following<sp/>statement<sp/>to<sp/>register<sp/>and<sp/>create<sp/>__PBO_suite__<sp/>,</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Register</highlight></codeline>
<codeline><highlight class="normal">static<sp/>registerInFactory&lt;IOHprofiler_suite&lt;int&gt;,PBO_suite&gt;<sp/>regPBO(&quot;PBO&quot;);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Create</highlight></codeline>
<codeline><highlight class="normal">std::shared_ptr&lt;IOHprofiler_suite&lt;InputType&gt;&gt;<sp/>suite<sp/>=<sp/>genericGenerator&lt;IOHprofiler_suite&lt;int&gt;&gt;::instance().create(&quot;PBO&quot;);</highlight></codeline>
<codeline><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="src/Suites/README.md"/>
  </compounddef>
</doxygen>
