<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="f__ising__torus_8hpp" kind="file" language="C++">
    <compoundname>f_ising_torus.hpp</compoundname>
    <includes refid="_i_o_hprofiler__problem_8h" local="yes">IOHprofiler_problem.h</includes>
    <includedby refid="_i_o_hprofiler___p_b_o__suite_8hpp" local="yes">src/Suites/IOHprofiler_PBO_suite.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
      <node id="18">
        <label>limits</label>
      </node>
      <node id="1">
        <label>src/Problems/PBO/f_ising_torus.hpp</label>
        <link refid="f__ising__torus_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IOHprofiler_problem.h</label>
        <link refid="_i_o_hprofiler__problem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>IOHprofiler_problem.hpp</label>
        <link refid="_i_o_hprofiler__problem_8hpp_source"/>
      </node>
      <node id="15">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="19">
        <label>cfloat</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="25">
        <label>coco_transformation.hpp</label>
        <link refid="coco__transformation_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IOHprofiler_common.h</label>
        <link refid="_i_o_hprofiler__common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>IOHprofiler_transformation.h</label>
        <link refid="_i_o_hprofiler__transformation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="16">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>IOHprofiler_random.h</label>
        <link refid="_i_o_hprofiler__random_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="26">
        <label>suite_bbob_legacy_code.hpp</label>
        <link refid="suite__bbob__legacy__code_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IOHprofiler_platform.h</label>
        <link refid="_i_o_hprofiler__platform_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>coco_transformation_vars.hpp</label>
        <link refid="coco__transformation__vars_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="28">
        <label>coco_transformation_objs.hpp</label>
        <link refid="coco__transformation__objs_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="8">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/Problems/PBO/f_ising_torus.hpp</label>
        <link refid="f__ising__torus_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/Template/Experiments/IOHprofiler_experimenter.h</label>
        <link refid="_i_o_hprofiler__experimenter_8h_source"/>
      </node>
      <node id="2">
        <label>src/Suites/IOHprofiler_PBO_suite.hpp</label>
        <link refid="_i_o_hprofiler___p_b_o__suite_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Suites/IOHprofiler_all_suites.hpp</label>
        <link refid="_i_o_hprofiler__all__suites_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ising___torus" prot="public">Ising_Torus</innerclass>
    <briefdescription>
<para>cpp file for class f_ising_torus. </para>
    </briefdescription>
    <detaileddescription>
<para>A detailed file description.</para>
<para><simplesect kind="author"><para>Naama Horesh and Furong Ye </para>
</simplesect>
<simplesect kind="date"><para>2019-06-27 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_F_ISING_TWOD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_F_ISING_TWOD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_o_hprofiler__problem_8h" kindref="compound">IOHprofiler_problem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_ising___torus" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ising___torus" kindref="compound">Ising_Torus</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_i_o_hprofiler__problem" kindref="compound">IOHprofiler_problem</ref>&lt;int&gt;<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="class_ising___torus" kindref="compound">Ising_Torus</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance_id<sp/>=<sp/>DEFAULT_INSTANCE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>DEFAULT_DIMENSION)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_o_hprofiler__problem_1a274b6d21250c336d04c7bc0ba6becce0" kindref="member">IOHprofiler_set_instance_id</ref>(instance_id);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_problem_name(</highlight><highlight class="stringliteral">&quot;Ising_Torus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_problem_type(</highlight><highlight class="stringliteral">&quot;pseudo_Boolean_problem&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_number_of_objectives(1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_lowerbound(0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_upperbound(1);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>IOHprofiler_set_best_variables(1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_o_hprofiler__problem_1aae2f77478533d0602371c447e1393d21" kindref="member">IOHprofiler_set_number_of_variables</ref>(dimension);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>~<ref refid="class_ising___torus" kindref="compound">Ising_Torus</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modulo_ising_torus(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>%<sp/>N<sp/>+<sp/>N)<sp/>%N;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>internal_evaluate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>x.size();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>neig;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbors[2];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lattice_size<sp/>=<sp/>(int)sqrt((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(floor(sqrt((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n))!=sqrt((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IOH_error(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>parameters<sp/>in<sp/>the<sp/>Ising<sp/>square<sp/>problem<sp/>must<sp/>be<sp/>a<sp/>square<sp/>number&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>lattice_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>lattice_size;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[0]<sp/><sp/>=<sp/>x[modulo_ising_torus(i<sp/>+<sp/>1,<sp/>lattice_size)<sp/>*<sp/>lattice_size<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors[1]<sp/><sp/>=<sp/>x[i<sp/>*<sp/>lattice_size<sp/>+<sp/>modulo_ising_torus((j<sp/>+<sp/>1)<sp/>,<sp/>lattice_size)];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(neig<sp/>=<sp/>0;<sp/>neig<sp/>&lt;<sp/>2;<sp/>neig++)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>(x[i*lattice_size<sp/>+<sp/>j]<sp/>*<sp/>neighbors[neig])<sp/>-<sp/>((1<sp/>-<sp/>x[i<sp/>*<sp/>lattice_size<sp/>+<sp/>j])<sp/>*<sp/>(1<sp/>-<sp/>neighbors[neig]));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)result;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_ising___torus" kindref="compound">Ising_Torus</ref><sp/>*<sp/>createInstance(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>instance_id<sp/>=<sp/>DEFAULT_INSTANCE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>DEFAULT_DIMENSION)<sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ising___torus" kindref="compound">Ising_Torus</ref>(instance_id,<sp/>dimension);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Problems/PBO/f_ising_torus.hpp"/>
  </compounddef>
</doxygen>
