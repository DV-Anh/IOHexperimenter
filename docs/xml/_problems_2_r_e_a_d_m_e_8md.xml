<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="_problems_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">##<sp/>Problems<sp/>of<sp/>IOHexperimenter</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[IOHprofiler_problem](/src/Template/IOHprofiler_problem.hpp)<sp/>is<sp/>the<sp/>base<sp/>`class`<sp/>of<sp/>problems<sp/>of<sp/>__IOHexperimenter__.<sp/>The<sp/>property<sp/>variables<sp/>of<sp/>problems<sp/>include:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`problem_id`,<sp/>will<sp/>be<sp/>assigned<sp/>if<sp/>the<sp/>problem<sp/>is<sp/>added<sp/>to<sp/>a<sp/>suite,<sp/>otherwise<sp/>default<sp/>by<sp/>0.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`instance_id`,<sp/><sp/>sets<sp/>transformation<sp/>methods<sp/>on<sp/>problems.<sp/>The<sp/>original<sp/>problem<sp/>is<sp/>with<sp/>instance_id<sp/>1,<sp/>&lt;i&gt;scale&lt;/i&gt;<sp/>and<sp/>&lt;i&gt;shift&lt;/i&gt;<sp/>are<sp/>applied<sp/>on<sp/>objectives<sp/>for<sp/>instance_id<sp/>in<sp/>[2,100],<sp/>&lt;i&gt;XOR&lt;/i&gt;<sp/>is<sp/>applied<sp/>on<sp/>variables<sp/>for<sp/>instance_id<sp/>in<sp/>[2,50],<sp/>and<sp/>&lt;i&gt;sigma&lt;/i&gt;<sp/>function<sp/>is<sp/>applied<sp/>on<sp/>variables<sp/>for<sp/>instance_id<sp/>in<sp/>[51,100].</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`problem_name`</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`problem_type`</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`lowerbound`,<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>lowerbound<sp/>for<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`upperbound`,<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>upperbound<sp/>for<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`number_of_variables`,<sp/>is<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`number_of_objectives`,<sp/>is<sp/>only<sp/>available<sp/>as<sp/>1<sp/>now.<sp/>The<sp/>functionality<sp/>of<sp/>multi-objectives<sp/>is<sp/>under<sp/>development.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`best_variables`,<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>optimal<sp/>solution,<sp/>which<sp/>is<sp/>used<sp/>to<sp/>calculate<sp/>the<sp/>optimum.<sp/>If<sp/>the<sp/>best_variables<sp/>is<sp/>not<sp/>given,<sp/>the<sp/>optimum<sp/>will<sp/>be<sp/>set<sp/>as<sp/>__DBL_MAX__.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`optimal`,<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>optimal<sp/>objectives,<sp/>but<sp/>currently<sp/>only<sp/>single<sp/>objective<sp/>is<sp/>supported.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>`evaluate_int_info`,<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>__int__<sp/>values<sp/>that<sp/>are<sp/>iteratively<sp/>used<sp/>in<sp/>&lt;i&gt;evaluate&lt;/i&gt;.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>`evaluate_double_info`,<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>__double__<sp/>values<sp/>that<sp/>are<sp/>iteratively<sp/>used<sp/>in<sp/>&lt;i&gt;evaluate&lt;/i&gt;.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">And<sp/>some<sp/>functions<sp/>for<sp/>personal<sp/>experiments<sp/>are<sp/>supplied:</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;evaluate(x)&lt;/i&gt;,<sp/>returns<sp/>a<sp/>vector<sp/>of<sp/>fitness<sp/>values.<sp/>The<sp/>argument<sp/>__x__<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;evaluate(x,y)&lt;/i&gt;,<sp/>updates<sp/>__y__<sp/>with<sp/>a<sp/>vector<sp/>of<sp/>fitness<sp/>values,<sp/>and<sp/>__x__<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>variables.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;addCSVLogger(logger)&lt;/i&gt;,<sp/>assigns<sp/>a<sp/>__IOHprofiler_csv_logger__<sp/>class<sp/>to<sp/>the<sp/>problem.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;clearLogger()&lt;/i&gt;,<sp/>delete<sp/>logger<sp/>methods<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;reset_problem()&lt;/i&gt;,<sp/>reset<sp/>the<sp/>history<sp/>information<sp/>of<sp/>problem<sp/>evaluations.<sp/>You<sp/>should<sp/>call<sp/>this<sp/>function<sp/>at<sp/>first<sp/>when<sp/>you<sp/>plan<sp/>to<sp/>do<sp/>another<sp/>test<sp/>on<sp/>the<sp/>same<sp/>problem<sp/>class.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;IOHprofiler_hit_optimal()&lt;/i&gt;,<sp/>returns<sp/>true<sp/>if<sp/>the<sp/>optimum<sp/>of<sp/>the<sp/>problem<sp/>has<sp/>been<sp/>found.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;IOHprofiler_set_number_of_variables(number_of_variables)&lt;/i&gt;,<sp/>sets<sp/>dimension<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>&lt;i&gt;IOHprofiler_set_instance_id(instance_id)&lt;/i&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Creating<sp/>a<sp/>problem</highlight></codeline>
<codeline><highlight class="normal">__IOHexperimenter__<sp/>provides<sp/>a<sp/>variety<sp/>of<sp/>problems<sp/>for<sp/>testing<sp/>algorithms,<sp/>but<sp/>it<sp/>is<sp/>also<sp/>easy<sp/>to<sp/>add<sp/>your<sp/>own<sp/>problems.<sp/>Overall,<sp/>to<sp/>create<sp/>a<sp/>problem<sp/>of<sp/>__IOHexperimenter__,<sp/>two<sp/>functions<sp/>need<sp/>to<sp/>be<sp/>implemented:<sp/>&lt;i&gt;construct<sp/>functions&lt;/i&gt;<sp/>and<sp/>&lt;i&gt;internel_evaluate&lt;/i&gt;.<sp/>Additionally,<sp/>you<sp/>can<sp/>define<sp/>&lt;i&gt;update_evaluate_double_info&lt;/i&gt;<sp/>and<sp/>&lt;i&gt;update_evaluate_int_info&lt;/i&gt;<sp/>to<sp/>make<sp/>evluate<sp/>process<sp/>more<sp/>efficiently.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Taking<sp/>the<sp/>implementation<sp/>of<sp/>__OneMax__<sp/>as<sp/>an<sp/>instance,<sp/>&lt;i&gt;construct<sp/>functions&lt;/i&gt;<sp/>are<sp/>as<sp/>below.<sp/>`problem_name`<sp/>and<sp/>`number_of_objectives`<sp/>__must__<sp/>be<sp/>set.<sp/>In<sp/>general,<sp/>two<sp/>methods<sp/>of<sp/>construction<sp/>of<sp/>the<sp/>problems<sp/>are<sp/>given.<sp/>One<sp/>is<sp/>constructing<sp/>without<sp/>giving<sp/>`instance_id`<sp/>and<sp/>`dimension`,<sp/>and<sp/>the<sp/>other<sp/>one<sp/>is<sp/>with.</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">OneMax()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_problem_name(&quot;OneMax&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_problem_type(&quot;pseudo_Boolean_problem&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_number_of_objectives(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_lowerbound(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_upperbound(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_best_variables(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">OneMax(int<sp/>instance_id,<sp/>int<sp/>dimension)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_instance_id(instance_id);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_problem_name(&quot;OneMax&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_problem_type(&quot;pseudo_Boolean_problem&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_number_of_objectives(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_lowerbound(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_upperbound(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_best_variables(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Initilize_problem(dimension);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">~OneMax()<sp/>{};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>Initilize_problem(int<sp/>dimension)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_number_of_variables(dimension);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IOHprofiler_set_optimal((double)dimension);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>&lt;i&gt;internal_evaluate&lt;/i&gt;<sp/>__must__<sp/>be<sp/>implemented<sp/>as<sp/>well.<sp/>It<sp/>is<sp/>used<sp/>during<sp/>evaluate<sp/>process,<sp/>returning<sp/>a<sp/>vector<sp/>of<sp/>(real)<sp/>objective<sp/>values<sp/>of<sp/>the<sp/>corresponding<sp/>variables<sp/>__x__.</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">std::vector&lt;double&gt;<sp/>internal_evaluate(std::vector&lt;int&gt;<sp/>x)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>y;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>n<sp/>=<sp/>x.size();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>x[i];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>y.push_back((double)result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>y;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>to<sp/>register<sp/>your<sp/>problem<sp/>by<sp/>`problem_name`<sp/>and<sp/>add<sp/>it<sp/>into<sp/>a<sp/>suite,<sp/>please<sp/>add<sp/>functions<sp/>creating<sp/>instances<sp/>as<sp/>following<sp/>codes.</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">static<sp/>OneMax<sp/>*<sp/>createInstance()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>new<sp/>OneMax();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">static<sp/>OneMax<sp/>*<sp/>createInstance(int<sp/>instance_id,<sp/>int<sp/>dimension)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>new<sp/>OneMax(instance_id,<sp/>dimension);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">To<sp/>register<sp/>the<sp/>problem,<sp/>you<sp/>can<sp/>use<sp/>the<sp/>&lt;i&gt;geniricGenerator&lt;/i&gt;<sp/>in<sp/>[IOHprofiler_class_generator](/src/Template/).<sp/>For<sp/>example,<sp/>you<sp/>can<sp/>use<sp/>the<sp/>following<sp/>statement<sp/>to<sp/>register<sp/>and<sp/>create<sp/>__OneMax__<sp/>,</highlight></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Register</highlight></codeline>
<codeline><highlight class="normal">static<sp/>registerInFactory&lt;IOHprofiler_problem&lt;int&gt;,OneMax&gt;<sp/>regOneMax(&quot;OneMax&quot;);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Create</highlight></codeline>
<codeline><highlight class="normal">std::shared_ptr&lt;IOHprofiler_problem&lt;int&gt;&gt;<sp/>problem<sp/>=<sp/>genericGenerator&lt;IOHprofiler_problem&lt;int&gt;&gt;::instance().create(&quot;OneMax&quot;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="src/Problems/README.md"/>
  </compounddef>
</doxygen>
