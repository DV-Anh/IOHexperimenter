<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.19">
  <compounddef id="suite__bbob__legacy__code_8hpp" kind="file" language="C++">
    <compoundname>suite_bbob_legacy_code.hpp</compoundname>
    <includes refid="_i_o_hprofiler__random_8h" local="yes">IOHprofiler_random.h</includes>
    <includedby refid="coco__transformation_8hpp" local="yes">src/Problems/BBOB/bbob_common_used_functions/coco_transformation.hpp</includedby>
    <includedby refid="coco__transformation__vars_8hpp" local="yes">src/Problems/BBOB/bbob_common_used_functions/coco_transformation_vars.hpp</includedby>
    <includedby refid="coco__transformation__objs_8hpp" local="yes">src/Problems/BBOB/bbob_common_used_functions/coco_transformation_objs.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>sys/stat.h</label>
      </node>
      <node id="18">
        <label>limits</label>
      </node>
      <node id="15">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="19">
        <label>cfloat</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>IOHprofiler_common.h</label>
        <link refid="_i_o_hprofiler__common_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="16">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>IOHprofiler_random.h</label>
        <link refid="_i_o_hprofiler__random_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="1">
        <label>src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp</label>
        <link refid="suite__bbob__legacy__code_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>IOHprofiler_platform.h</label>
        <link refid="_i_o_hprofiler__platform_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="8">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="42">
        <label>src/Problems/PBO/f_leading_ones_epistasis.hpp</label>
        <link refid="f__leading__ones__epistasis_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/Problems/BBOB/f_rastrigin.hpp</label>
        <link refid="f__rastrigin_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>src/Problems/PBO/f_leading_ones.hpp</label>
        <link refid="f__leading__ones_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/Problems/BBOB/f_rosenbrock.hpp</label>
        <link refid="f__rosenbrock_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>src/Problems/PBO/f_leading_ones_neutrality.hpp</label>
        <link refid="f__leading__ones__neutrality_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/Problems/BBOB/f_different_powers.hpp</label>
        <link refid="f__different__powers_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>src/Problems/PBO/f_one_max_ruggedness3.hpp</label>
        <link refid="f__one__max__ruggedness3_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/Problems/BBOB/f_ellipsoid_rotated.hpp</label>
        <link refid="f__ellipsoid__rotated_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>src/Template/Loggers/IOHprofiler_csv_logger.h</label>
        <link refid="_i_o_hprofiler__csv__logger_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>src/Problems/PBO/f_one_max_dummy2.hpp</label>
        <link refid="f__one__max__dummy2_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>src/Problems/PBO/f_leading_ones_ruggedness1.hpp</label>
        <link refid="f__leading__ones__ruggedness1_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/Problems/PBO/f_ising_torus.hpp</label>
        <link refid="f__ising__torus_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/Problems/BBOB/f_katsuura.hpp</label>
        <link refid="f__katsuura_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/Suites/IOHprofiler_BBOB_suite.hpp</label>
        <link refid="_i_o_hprofiler___b_b_o_b__suite_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/Template/IOHprofiler_problem.h</label>
        <link refid="_i_o_hprofiler__problem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>src/Problems/PBO/f_one_max_epistasis.hpp</label>
        <link refid="f__one__max__epistasis_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/Problems/BBOB/f_ellipsoid.hpp</label>
        <link refid="f__ellipsoid_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/Problems/BBOB/f_step_ellipsoid.hpp</label>
        <link refid="f__step__ellipsoid_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>src/Template/IOHprofiler_observer.cpp</label>
        <link refid="_i_o_hprofiler__observer_8cpp"/>
      </node>
      <node id="38">
        <label>src/Problems/IOHprofiler_all_problems.hpp</label>
        <link refid="_i_o_hprofiler__all__problems_8hpp_source"/>
      </node>
      <node id="13">
        <label>src/Problems/BBOB/f_gallagher101.hpp</label>
        <link refid="f__gallagher101_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/Problems/BBOB/f_linear_slope.hpp</label>
        <link refid="f__linear__slope_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>src/Problems/PBO/f_one_max.hpp</label>
        <link refid="f__one__max_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/Problems/BBOB/f_rosenbrock_rotated.hpp</label>
        <link refid="f__rosenbrock__rotated_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>src/Template/IOHprofiler_transformation.cpp</label>
        <link refid="_i_o_hprofiler__transformation_8cpp"/>
      </node>
      <node id="33">
        <label>src/Problems/PBO/f_ising_ring.hpp</label>
        <link refid="f__ising__ring_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/Problems/BBOB/f_schaffers1000.hpp</label>
        <link refid="f__schaffers1000_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/Problems/BBOB/f_bent_cigar.hpp</label>
        <link refid="f__bent__cigar_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>src/Problems/PBO/f_one_max_neutrality.hpp</label>
        <link refid="f__one__max__neutrality_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/Template/Experiments/IOHprofiler_experimenter.h</label>
        <link refid="_i_o_hprofiler__experimenter_8h_source"/>
      </node>
      <node id="47">
        <label>src/Problems/PBO/f_linear.hpp</label>
        <link refid="f__linear_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/Problems/BBOB/f_rastrigin_rotated.hpp</label>
        <link refid="f__rastrigin__rotated_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/Suites/IOHprofiler_PBO_suite.hpp</label>
        <link refid="_i_o_hprofiler___p_b_o__suite_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/Problems/BBOB/f_schwefel.hpp</label>
        <link refid="f__schwefel_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>src/Problems/PBO/f_leading_ones_dummy2.hpp</label>
        <link refid="f__leading__ones__dummy2_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>src/Template/Loggers/IOHprofiler_csv_logger.cpp</label>
        <link refid="_i_o_hprofiler__csv__logger_8cpp"/>
      </node>
      <node id="2">
        <label>src/Problems/BBOB/bbob_common_used_functions/coco_transformation.hpp</label>
        <link refid="coco__transformation_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>src/Template/IOHprofiler_observer.h</label>
        <link refid="_i_o_hprofiler__observer_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>src/Template/IOHprofiler_suite.h</label>
        <link refid="_i_o_hprofiler__suite_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>src/Problems/WModel/f_w_model_leading_ones.hpp</label>
        <link refid="f__w__model__leading__ones_8hpp"/>
      </node>
      <node id="32">
        <label>src/Problems/PBO/f_concatenated_trap.hpp</label>
        <link refid="f__concatenated__trap_8hpp_source"/>
      </node>
      <node id="27">
        <label>src/Problems/BBOB/f_sphere.hpp</label>
        <link refid="f__sphere_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/Template/IOHprofiler_transformation.h</label>
        <link refid="_i_o_hprofiler__transformation_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>src/Problems/PBO/f_nk_landscapes.hpp</label>
        <link refid="f__nk__landscapes_8hpp"/>
      </node>
      <node id="5">
        <label>src/Suites/IOHprofiler_all_suites.hpp</label>
        <link refid="_i_o_hprofiler__all__suites_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/Problems/BBOB/f_discus.hpp</label>
        <link refid="f__discus_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/Problems/PBO/f_ising_triangular.hpp</label>
        <link refid="f__ising__triangular_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>src/Problems/PBO/f_leading_ones_dummy1.hpp</label>
        <link refid="f__leading__ones__dummy1_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Problems/BBOB/f_bueche_rastrigin.hpp</label>
        <link refid="f__bueche__rastrigin_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/Problems/BBOB/f_lunacek_bi_rastrigin.hpp</label>
        <link refid="f__lunacek__bi__rastrigin_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/Problems/BBOB/f_schaffers10.hpp</label>
        <link refid="f__schaffers10_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>src/Problems/PBO/f_N_queens.hpp</label>
        <link refid="f___n__queens_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/Problems/PBO/f_labs.hpp</label>
        <link refid="f__labs_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>src/Problems/PBO/f_MIS.hpp</label>
        <link refid="f___m_i_s_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>src/Problems/PBO/f_one_max_dummy1.hpp</label>
        <link refid="f__one__max__dummy1_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Problems/BBOB/f_attractive_sector.hpp</label>
        <link refid="f__attractive__sector_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>src/Problems/PBO/f_leading_ones_ruggedness2.hpp</label>
        <link refid="f__leading__ones__ruggedness2_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp</label>
        <link refid="suite__bbob__legacy__code_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>src/Problems/PBO/f_leading_ones_ruggedness3.hpp</label>
        <link refid="f__leading__ones__ruggedness3_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/Problems/BBOB/f_gallagher21.hpp</label>
        <link refid="f__gallagher21_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>src/Problems/BBOB/bbob_common_used_functions/coco_transformation_vars.hpp</label>
        <link refid="coco__transformation__vars_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>src/Problems/WModel/f_w_model_one_max.hpp</label>
        <link refid="f__w__model__one__max_8hpp"/>
      </node>
      <node id="26">
        <label>src/Problems/BBOB/f_sharp_ridge.hpp</label>
        <link refid="f__sharp__ridge_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/Problems/BBOB/f_weierstrass.hpp</label>
        <link refid="f__weierstrass_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>src/Problems/PBO/f_one_max_ruggedness1.hpp</label>
        <link refid="f__one__max__ruggedness1_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/Problems/BBOB/f_griewank_rosenbrock.hpp</label>
        <link refid="f__griewank__rosenbrock_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>src/Problems/BBOB/bbob_common_used_functions/coco_transformation_objs.hpp</label>
        <link refid="coco__transformation__objs_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>src/Problems/PBO/f_one_max_ruggedness2.hpp</label>
        <link refid="f__one__max__ruggedness2_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="suite__bbob__legacy__code_8hpp_1a30f5ab8c8eebf32a5ef95bf3d5297c6d" prot="public" static="no">
        <name>SUITE_BBOB2009_MAX_DIM</name>
        <initializer>40</initializer>
        <briefdescription>
<para>Maximal dimension used in BBOB2009. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="18" column="9" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="suite__bbob__legacy__code_8hpp_1a973742d29d384e21661bda90875ccf39" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double coco_pi</definition>
        <argsstring></argsstring>
        <name>coco_pi</name>
        <initializer>= 3.14159265358979323846</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="16" column="21" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a2ec6e1c131829dfca561e15a62670578" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double bbob2009_fmin</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>bbob2009_fmin</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Computes the minimum of the two values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="21" column="15" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a9176e3ed48baabef3d59abb111e4ce2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double bbob2009_fmax</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>bbob2009_fmax</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Computes the maximum of the two values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="26" column="15" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1aa419105fb5ab1a7d1eca3d036e1db642" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double bbob2009_round</definition>
        <argsstring>(double x)</argsstring>
        <name>bbob2009_round</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Rounds the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="31" column="15" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a69567b5718c65b57d0f8e23f87ec8922" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bbob2009_unif</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;r, size_t N, long inseed)</argsstring>
        <name>bbob2009_unif</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>long</type>
          <declname>inseed</declname>
        </param>
        <briefdescription>
<para>Generates N uniform random numbers using inseed as the seed and stores them in r. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="38" column="13" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="38" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1ae9c96bbb068bbafde4c579a67334ac03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bbob2009_reshape</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;B, const std::vector&lt; double &gt; &amp;vector, const size_t m, const size_t n)</argsstring>
        <name>bbob2009_reshape</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt; &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Converts from packed matrix storage to an array of array of double representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="80" column="13" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a45b7deee386d39f3a51195a76ecc8b3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bbob2009_gauss</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;g, const size_t N, const long seed)</argsstring>
        <name>bbob2009_gauss</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Generates N Gaussian random numbers using the given seed and stores them in g. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="94" column="13" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="94" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a2a04739df5afb6d6c00049e6f9fe9a72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bbob2009_compute_rotation</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt; &gt; &amp;B, const long seed, const size_t DIM)</argsstring>
        <name>bbob2009_compute_rotation</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt; &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>DIM</declname>
        </param>
        <briefdescription>
<para>Computes a DIM by DIM rotation matrix based on seed and stores it in B. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="111" column="13" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="111" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a0f571b7dae2cb87ee9651a665f36f965" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bbob2009_copy_rotation_matrix</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; double &gt; &gt; &amp;rot, std::vector&lt; std::vector&lt; double &gt; &gt; &amp;M, std::vector&lt; double &gt; &amp;b, const size_t DIM)</argsstring>
        <name>bbob2009_copy_rotation_matrix</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; double &gt; &gt; &amp;</type>
          <declname>rot</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt; &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>DIM</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="138" column="13" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="138" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1a5f6d2751aa7b7138ccbad72d2dcd8cfe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bbob2009_compute_xopt</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;xopt, const long seed, const size_t DIM)</argsstring>
        <name>bbob2009_compute_xopt</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>xopt</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>DIM</declname>
        </param>
        <briefdescription>
<para>Randomly computes the location of the global optimum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="153" column="13" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="153" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="suite__bbob__legacy__code_8hpp_1ae276a15595ea9f7860b823e4229afc5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double bbob2009_compute_fopt</definition>
        <argsstring>(const size_t function, const size_t instance)</argsstring>
        <name>bbob2009_compute_fopt</name>
        <param>
          <type>const size_t</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
<para>Randomly chooses the objective offset for the given function and instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" line="166" column="15" bodyfile="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp" bodystart="166" bodyend="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>_SUITE_BBOB_LEGACY_CODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SUITE_BBOB_LEGACY_CODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IOHprofiler_random.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coco_pi<sp/>=<sp/>3.14159265358979323846;</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor">#define<sp/>SUITE_BBOB2009_MAX_DIM<sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bbob2009_fmin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>b)<sp/>?<sp/>a<sp/>:<sp/>b;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bbob2009_fmax(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&gt;<sp/>b)<sp/>?<sp/>a<sp/>:<sp/>b;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bbob2009_round(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>floor(x<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bbob2009_unif(std::vector&lt;double&gt;<sp/>&amp;r,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>inseed)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>generates<sp/>N<sp/>uniform<sp/>numbers<sp/>with<sp/>starting<sp/>seed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>aktseed;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rgrand[32];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>aktrand;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>r<sp/>=<sp/>std::vector&lt;double&gt;<sp/>(N);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inseed<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>inseed<sp/>=<sp/>-inseed;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inseed<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>inseed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>aktseed<sp/>=<sp/>inseed;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>39;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>floor((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>aktseed<sp/>/<sp/>(double)<sp/>127773);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>aktseed<sp/>=<sp/>16807<sp/>*<sp/>(aktseed<sp/>-<sp/>tmp<sp/>*<sp/>127773)<sp/>-<sp/>2836<sp/>*<sp/>tmp;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aktseed<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aktseed<sp/>=<sp/>aktseed<sp/>+<sp/>2147483647;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>32)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rgrand[i]<sp/>=<sp/>aktseed;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>aktrand<sp/>=<sp/>rgrand[0];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>floor((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>aktseed<sp/>/<sp/>(double)<sp/>127773);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>aktseed<sp/>=<sp/>16807<sp/>*<sp/>(aktseed<sp/>-<sp/>tmp<sp/>*<sp/>127773)<sp/>-<sp/>2836<sp/>*<sp/>tmp;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aktseed<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aktseed<sp/>=<sp/>aktseed<sp/>+<sp/>2147483647;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>floor((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>aktrand<sp/>/<sp/>(double)<sp/>67108865);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>aktrand<sp/>=<sp/>rgrand[tmp];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>rgrand[tmp]<sp/>=<sp/>aktseed;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>(double)<sp/>aktrand<sp/>/<sp/>2.147483647e9;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r[i]<sp/>==<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[i]<sp/>=<sp/>1e-99;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bbob2009_reshape(std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;<sp/>&amp;B,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>&amp;vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>B<sp/>=<sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;<sp/>(m);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>B[i]<sp/>=<sp/>std::vector&lt;double&gt;<sp/>(n);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>B[i][j]<sp/>=<sp/>vector[j<sp/>*<sp/>m<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bbob2009_gauss(std::vector&lt;double&gt;<sp/>&amp;g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>g<sp/>=<sp/>std::vector&lt;double&gt;<sp/>(N);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>uniftmp(6000);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>assert(2<sp/>*<sp/>N<sp/>&lt;<sp/>6000);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>bbob2009_unif(uniftmp,<sp/>2<sp/>*<sp/>N,<sp/>seed);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>g[i]<sp/>=<sp/>sqrt(-2<sp/>*<sp/>log(uniftmp[i]))<sp/>*<sp/>cos(2<sp/>*<sp/>coco_pi<sp/>*<sp/>uniftmp[N<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g[i]<sp/>==<sp/>0.)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g[i]<sp/>=<sp/>1e-99;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bbob2009_compute_rotation(std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;<sp/>&amp;B,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>ensure<sp/>temporary<sp/>data<sp/>fits<sp/>into<sp/>gvec<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prod;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>gvect(2000);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;<sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>pairs<sp/>of<sp/>column<sp/>vectors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>bbob2009_gauss(gvect,<sp/>DIM<sp/>*<sp/>DIM,<sp/>seed);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>bbob2009_reshape(B,<sp/>gvect,<sp/>DIM,<sp/>DIM);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*1st<sp/>coordinate<sp/>is<sp/>row,<sp/>2nd<sp/>is<sp/>column.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DIM;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prod<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>DIM;<sp/>k++)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prod<sp/>+=<sp/>B[k][i]<sp/>*<sp/>B[k][j];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>DIM;<sp/>k++)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B[k][i]<sp/>-=<sp/>prod<sp/>*<sp/>B[k][j];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>prod<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>DIM;<sp/>k++)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prod<sp/>+=<sp/>B[k][i]<sp/>*<sp/>B[k][i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>DIM;<sp/>k++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>B[k][i]<sp/>/=<sp/>sqrt(prod);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bbob2009_copy_rotation_matrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;<sp/>&amp;rot,<sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;<sp/>&amp;M,<sp/>std::vector&lt;double&gt;<sp/>&amp;b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/>column;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*current_row;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>DIM;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/>DIM;<sp/>++column)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M[row][column]<sp/>=<sp/>rot[row][column];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>b[row]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bbob2009_compute_xopt(std::vector&lt;double&gt;<sp/>&amp;xopt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DIM)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>bbob2009_unif(xopt,<sp/>DIM,<sp/>seed);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DIM;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>xopt[i]<sp/>=<sp/>8<sp/>*<sp/>floor(1e4<sp/>*<sp/>xopt[i])<sp/>/<sp/>1e4<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xopt[i]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xopt[i]<sp/>=<sp/>-1e-5;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bbob2009_compute_fopt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>instance)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rseed,<sp/>rrseed;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>gval,<sp/>gval2;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>18)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>101<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>102<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>103<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>107</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>108<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>109)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>104<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>105<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>106<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>110</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>111<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>112)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>113<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>114<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>115)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>116<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>117<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>118)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>119<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>120<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>121)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>122<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>123<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>124)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>125<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>126<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>127)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>19;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>128<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>129<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>==<sp/>130)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>21;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>rseed<sp/>=<sp/>(long)<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>rrseed<sp/>=<sp/>rseed<sp/>+<sp/>(long)<sp/>(10000<sp/>*<sp/>instance);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>bbob2009_gauss(gval,<sp/>1,<sp/>rrseed);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>bbob2009_gauss(gval2,<sp/>1,<sp/>rrseed<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bbob2009_fmin(1000.,<sp/>bbob2009_fmax(-1000.,<sp/>bbob2009_round(100.<sp/>*<sp/>100.<sp/>*<sp/>gval[0]<sp/>/<sp/>gval2[0])<sp/>/<sp/>100.));</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/Problems/BBOB/bbob_common_used_functions/suite_bbob_legacy_code.hpp"/>
  </compounddef>
</doxygen>
