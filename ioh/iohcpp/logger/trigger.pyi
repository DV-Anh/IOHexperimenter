import ioh.iohcpp
ALWAYS: Always
ON_IMPROVEMENT: OnImprovement

class Always(Trigger):
    def __init__(self, *args, **kwargs) -> None: ...

class At(Trigger):
    def __init__(self, *args, **kwargs) -> None: ...

class During(Trigger):
    def __init__(self, *args, **kwargs) -> None: ...

class Each(Trigger):
    def __init__(self, *args, **kwargs) -> None: ...

class OnImprovement(Trigger):
    def __init__(self, *args, **kwargs) -> None: ...

class Trigger:
    def __init__(self, *args, **kwargs) -> None: ...
    def reset(self) -> None: ...
    def __call__(self, arg0: ioh.iohcpp.LogInfo, arg1: ioh.iohcpp.MetaData) -> bool: ...
