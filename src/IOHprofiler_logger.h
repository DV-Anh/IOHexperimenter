#ifndef _IOHPROFILER_LOGGER_H
#define _IOHPROFILER_LOGGER_H


#include "common.h"

#include <boost/filesystem.hpp>

// Implementation for logging process of problem evaluations.
// A folder for storing data with given name 'path' will be created
// when the class is generated. To activate logger functions as 
// evaluating problems, a 'logger' must be added to a
// IOHprofiler_problem with format 'problem.add_logger(logger)'.
//
// Hint: Only use an unique logger for each experiments for an algorithm.
// But a logger is avaiable for test of an algorithm on multiple prorblems.

class IOHprofiler_logger
{
public:
  IOHprofiler_logger(char * path
                     string alg_name, string alg_info, 
                     int func_id) {
    strcat(output_filename,filename);
    strcat(output_path,path);
    algorithm_name =  alg_name;
    algorithm_info = alg_info;
    function_id = func_id;
  };
  ~IOHprofiler_logger();

  /***************************************************************
  ******** Functions to be invoked by evaluate of problem ********
  ****************************************************************/

  // Set the options for logging files. All logging files are to be generated by default,
  void IOHprofiler_setting(int *parameters);

  // Creating the folder for logging files of the corresponding problem.
  int IOHprofiler_logger_openIndex();

  // Initilizing the files for current logging process.
  int IOHprofiler_logger_initilizing_files();

  // Write a line to the file.
  void IOHprofiler_logger_write_line(char * line, string file_name);

private:
  size_t evaluations;
  string output_filename;
  string output_path;


  // The information of logged problems.
  int dimension;
  int function_id;
  string algorithm_name;
  string algorithm_info;
  string suite_name;
  std::vector<string> parameter_name;

  /***************************************************************
  *****************  Variables for logging files  ****************
  ****************************************************************/

  // Flags for logging files.
  bool cFlag = true;
  bool iFlag = true;
  bool tFlag = true;
  bool datFlag = true;

  // stream for logging files.
  ofstream cdat;
  ofstream idat;
  ofstream tdat;
  ofstream dat;
  ofstream infoFile;

  // Parameters for .tdat file.
  int number_evaluation_triggers 0;
  char * base_evaluation_triggers = 0;

  // The interval value for .idat files. .idat file is not to be generated if set as 0.
  int number_interval_triggers = 0;

  // .cdat file is to be generated if set as 1.
  int complete_triggers = 1;



  /***************************************************************
  **********************  Private functions  *********************
  ****************************************************************/
  
  // To create a new folder for logging files.
  // If the folder exist, creating a folder renamed by add a suffix.
  int IOHprofiler_create_folder(const string path);

  // Create a new file.
  int IOHprofiler_create_file(const string file_name);

  // Open a file.
  int IOHprofiler_open_file(const string file_name);

  // Close a file.
  int IOHprofiler_close_file(const string file_name);
};

#endif